-- This script was generated using the MoonVeil Obfuscator v1.4.0 [https://moonveil.cc]
local Gj,Tm,kn,Kh,ti,ze=pairs,bit32.bxor,type,getmetatable;local t,ji,Ga,cl,jn,Ja,uo,Tc,_a,fl,in_,Sb,tj,mc,_i jn=('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/');Tc,Sb=(string.gsub),(string.char);mc=(function(dh)dh=Tc(dh,'[^'..jn..'=]','')return(dh:gsub('.',function(Wm)if(Wm=='=')then return''end local Va,Dc='',(jn:find(Wm)-1)for Lk=6,1,-1 do Va=Va..(Dc%2^Lk-Dc%2^(Lk-1)>0 and'1'or'0')end return Va;end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(nc)if(#nc~=8)then return''end local w=0 for Uj=1,8 do w=w+(nc:sub(Uj,Uj)=='1'and 2^(8-Uj)or 0)end return Sb(w)end))end);in_,uo,ji,Ja,Ga,t,tj,_a=string.unpack,string.sub,string.byte,bit32 .lshift,bit32 .rshift,bit32 .band,table.concat,{};cl=(function(mg)local ub,rm,Zn,Kf,Vl,hn,kl,Ym,ai,Ue,ri,Ii,hk,qa,ug,Jf,zn,Sc,Lh,uk,md,vn Zn,kl={},function(Sg,Ll,xk)Zn[Sg]=Tm(Ll,42365)-Tm(xk,42526)return Zn[Sg]end ri=Zn[-16223]or kl(-16223,65493,47558)repeat while true do if ri<=31432 then if ri<=15074 then if ri>8030 then if ri>14127 then hk=_a[mg];if hk then ri=Zn[-10779]or kl(-10779,20268,815)break end ri=Zn[-11641]or kl(-11641,24946,38509)else if Sc<=#mg then ri=Zn[-12025]or kl(-12025,123720,62094)else ri=Zn[239]or kl(239,125670,5117)end end else ug=nil;if t(Lh,1)~=0 then ri=Zn[-19211]or kl(-19211,21666,12890)break else ri=Zn[26420]or kl(26420,116927,15870)break end ri=Zn[28745]or kl(28745,113228,12870)end elseif ri<=23313 then if ri>17588 then return hk else Ii=Ii+Ue;rm=Ii;if Ii~=Ii then ri=Zn[-29610]or kl(-29610,53443,58417)else ri=23447 end end elseif ri>26296 then vn[#vn+1]=ug ub=uo(ub..ug,-qa)ri=Zn[-21423]or kl(-21423,112947,32283)elseif ri>23705 then if Sc<=#mg then ri=Zn[11596]or kl(11596,79096,28808)break end ri=Zn[-4213]or kl(-4213,973,48585)else if(Ue>=0 and Ii>Ym)or((Ue<0 or Ue~=Ue)and Ii<Ym)then ri=Zn[-15635]or kl(-15635,21007,26109)else ri=1004 end end elseif ri<=48703 then if ri>41700 then if ri>46968 then ug=uo(mg,Sc,Sc)Sc=Sc+1 ri=Zn[12945]or kl(12945,7167,38327)elseif ri>46097 then hn=in_('>I2',mg,Sc);Sc=Sc+2 uk,Jf=#ub-Ga(hn,md),t(hn,(ai-1))+Kf ug=uo(ub,uk,uk+Jf-1)ri=Zn[-22268]or kl(-22268,111873,9149)else rm=Ii;if Ym~=Ym then ri=Zn[-22011]or kl(-22011,57662,46762)else ri=Zn[18879]or kl(18879,2623,62901)end end elseif ri<=37448 then Lh=Ga(Lh,1)if not(ug)then ri=Zn[9974]or kl(9974,4567,54911)break else ri=Zn[-14430]or kl(-14430,5795,58395)break end ri=Zn[6140]or kl(6140,98654,31172)elseif ri>38570 then Vl=tj(vn);_a[mg]=Vl return Vl else zn=12;md,qa=16-zn,Ja(1,zn);ai,Kf,Sc,vn,ub=Ja(1,md),3,1,{},'';ri=13199;end elseif ri>57795 then Lh=ji(mg,Sc);Sc=Sc+1 Ym,Ue,Ii=(8)+155,1,156 ri=46082 else if not(Sc+1<=#mg)then ri=Zn[-27503]or kl(-27503,74675,24043)break else ri=Zn[-15926]or kl(-15926,28480,45058)break end ri=Zn[-18690]or kl(-18690,105968,2986)end end until ri==48456 end);_i=(function()local ci,Ci,Rm,Wc,Le,f,Fj,Mn,ka,ce,sl,zb=bit32 .bxor,bit32 .band,bit32 .bor,bit32 .lshift,bit32 .rshift,string.sub,string.pack,string.unpack,string.rep,table.pack,table.unpack,table.insert local function Bj(Yh,lb,xi,vo,wh)local em,Lm,Pe,og=Yh[lb],Yh[xi],Yh[vo],Yh[wh]local jh em=Ci(em+Lm,4294967295)jh=ci(og,em);og=Ci(Rm(Wc(jh,16),Le(jh,16)),4294967295)Pe=Ci(Pe+og,4294967295)jh=ci(Lm,Pe);Lm=Ci(Rm(Wc(jh,12),Le(jh,20)),4294967295)em=Ci(em+Lm,4294967295)jh=ci(og,em);og=Ci(Rm(Wc(jh,8),Le(jh,24)),4294967295)Pe=Ci(Pe+og,4294967295)jh=ci(Lm,Pe);Lm=Ci(Rm(Wc(jh,7),Le(jh,25)),4294967295)Yh[lb],Yh[xi],Yh[vo],Yh[wh]=em,Lm,Pe,og return Yh end local Pg,Td={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}local Eh=function(ej,Bb,zi)local Jc,nj,Lj,xe,uj,wf,Gi,ne,X,co,_h,Jb,ao,dj,Wi,Wk,Fc,lk,Ke,rj,Kc,Bi,pd,Qg,ye nj,xe={},function(yg,F,Cn)nj[yg]=Tm(F,25245)-Tm(Cn,42792)return nj[yg]end X=nj[12091]or xe(12091,53881,41856)repeat while true do if X>40768 then if X>53845 then if X>61902 then if(Wk>=0 and uj>co)or((Wk<0 or Wk~=Wk)and uj<co)then X=nj[22375]or xe(22375,48344,36221)else X=38223 end elseif X>59980 then rj[13]=Bb Wi,ao,ne=1,39,(3)+38 X=nj[5366]or xe(5366,41513,53379)elseif X>58844 then Gi=Gi+Qg;Jb=Gi;if Gi~=Gi then X=61514 else X=nj[-25000]or xe(-25000,51669,34445)end elseif X>58532 then co,Wk,uj=(10)+19,1,20 X=37004 else ao=ao+Wi;_h=ao;if ao~=ao then X=51883 else X=43465 end end elseif X>47107 then if X>50994 then Bi,lk,ye=252,(16)+251,1 X=nj[-14050]or xe(-14050,90100,53627)elseif X<=50536 then rj[(Jb-65)+4]=ej[(Jb-65)]X=nj[-20869]or xe(-20869,84822,58696)else Jc=Bi;if lk~=lk then X=nj[-17143]or xe(-17143,88613,62614)else X=16880 end end elseif X>44198 then Lj,pd,Fc=1,52,(16)+51 X=nj[-28229]or xe(-28229,83226,27918)elseif X>43212 then if X<=43778 then if(Wi>=0 and ao>ne)or((Wi<0 or Wi~=Wi)and ao<ne)then X=nj[-27858]or xe(-27858,70144,730)else X=nj[-28732]or xe(-28732,6893,38423)end else rj,dj=Pg,Td;rj[1],rj[2],rj[3],rj[4]=2657677504,3098697004,1768950783,2905213107 Ke,Qg,Gi=(8)+65,1,66 X=nj[-22820]or xe(-22820,84833,9096)end else Jb=Gi;if Ke~=Ke then X=nj[-12405]or xe(-12405,110325,31542)else X=nj[-1895]or xe(-1895,65137,46177)end end elseif X<=27201 then if X>20745 then if X<=24608 then Kc=pd;if Fc~=Fc then X=16179 else X=19236 end else uj=uj+Wk;wf=uj;if uj~=uj then X=46064 else X=65358 end end elseif X>17707 then if X<=18730 then if X<=18461 then rj[(_h-38)+13]=zi[(_h-38)]X=nj[-12054]or xe(-12054,127094,2485)else _h=ao;if ne~=ne then X=51883 else X=nj[-31559]or xe(-31559,33433,37139)end end else if(Lj>=0 and pd>Fc)or((Lj<0 or Lj~=Lj)and pd<Fc)then X=nj[17541]or xe(17541,61531,62651)else X=34632 end end elseif X>16811 then if X<=17162 then if(ye>=0 and Bi>lk)or((ye<0 or ye~=ye)and Bi<lk)then X=58618 else X=35017 end else Bi=Bi+ye;Jc=Bi;if Bi~=Bi then X=nj[23115]or xe(23115,111090,18781)else X=16880 end end else return rj end elseif X>36427 then if X<=37477 then if X>36867 then wf=uj;if co~=co then X=nj[17253]or xe(17253,38666,59023)else X=65358 end else pd=pd+Lj;Kc=pd;if pd~=pd then X=16179 else X=nj[12299]or xe(12299,16371,46434)end end else Bj(dj,1,5,9,13);Bj(dj,2,6,10,14);Bj(dj,3,7,11,15);Bj(dj,4,8,12,16);Bj(dj,1,6,11,16);Bj(dj,2,7,12,13);Bj(dj,3,8,9,14);Bj(dj,4,5,10,15)X=nj[-23408]or xe(-23408,65730,22696)end elseif X<=34933 then rj[(Kc-51)]=Ci(rj[(Kc-51)]+dj[(Kc-51)],4294967295)X=nj[3768]or xe(3768,80472,28258)elseif X<=35126 then dj[(Jc-251)]=rj[(Jc-251)]X=nj[13766]or xe(13766,53798,52159)else if(Qg>=0 and Gi>Ke)or((Qg<0 or Qg~=Qg)and Gi<Ke)then X=61514 else X=50106 end end end until X==633 end local function Qe(rd,Hk,Uf,vh,Al)local Fn,Ji,Ee,s,yf,Jn,Zg,O,yc,Il,Ij,vk,te te,Il={},function(Fh,Xi,nm)te[Fh]=Tm(Xi,61047)-Tm(nm,6750)return te[Fh]end Ji=te[-28571]or Il(-28571,106995,19015)repeat while true do if Ji<=44983 then if Ji<=33971 then if Ji<=28076 then O=f(vh,Al);vh=O..ka('\0',64-yc)Al=1 Ji=te[-14105]or Il(-14105,39003,7249)elseif Ji>30136 then if(Ee>=0 and Fn>vk)or((Ee<0 or Ee~=Ee)and Fn<vk)then Ji=34083 else Ji=46871 end else assert(#vh>=64)s,Zg=ce(Mn(Ij,vh,Al)),Eh(rd,Hk,Uf)Ee,Fn,vk=1,167,(16)+166 Ji=36441 end elseif Ji<=38723 then if Ji>35820 then if Ji<=36999 then if Ji>36680 then yf=f(yf,1,yc)Ji=te[9973]or Il(9973,23777,4973)else Jn=Fn;if vk~=vk then Ji=te[27206]or Il(27206,14378,19300)else Ji=31572 end end else Fn=Fn+Ee;Jn=Fn;if Fn~=Fn then Ji=te[2281]or Il(2281,30641,3837)else Ji=31572 end end else yf=Fj(Ij,sl(s));if yc<64 then Ji=te[-20878]or Il(-20878,128568,37449)break end Ji=43363 end else return yf end elseif Ji<=56129 then s[(Jn-166)]=ci(s[(Jn-166)],Zg[(Jn-166)])Ji=te[31399]or Il(31399,28675,4577)else Ij,yc='<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4',#vh-Al+1;if not(yc<64)then Ji=te[9472]or Il(9472,31465,16095)break else Ji=te[19216]or Il(19216,116238,53803)break end;Ji=te[-30511]or Il(-30511,37238,5306);end end until Ji==1093 end local function Qn(se)local hc,qm,Af,Rh,Yn,Zk,g,pj hc,Zk={},function(Vb,Tb,Nj)hc[Vb]=Tm(Tb,42539)-Tm(Nj,31152)return hc[Vb]end qm=hc[29679]or Zk(29679,68843,34265)repeat while true do if qm<=29214 then if qm>17220 then if(Rh>=0 and pj>g)or((Rh<0 or Rh~=Rh)and pj<g)then qm=hc[-19827]or Zk(-19827,31096,10503)else qm=31304 end else Af=pj;if g~=g then qm=hc[27582]or Zk(27582,4055,25296)else qm=hc[5569]or Zk(5569,111768,49557)end end elseif qm>39236 then if qm>45900 then pj=pj+Rh;Af=pj;if pj~=pj then qm=36508 else qm=hc[-22146]or Zk(-22146,100036,49105)end else Yn='';Rh,pj,g=1,103,(#se)+102 qm=hc[-27986]or Zk(-27986,4144,62352)end elseif qm>33906 then return Yn else Yn=Yn..se[(Af-102)]qm=hc[5065]or Zk(5065,102846,1764)end end until qm==38713 end local function Rb(Tl,_c,cf,eh)local sa,kb,pe,fn,wl,Dh,Wf fn,Dh={},function(fg,hl,Im)fn[fg]=Tm(hl,32993)-Tm(Im,61805)return fn[fg]end kb=fn[-3508]or Dh(-3508,4726,56157)repeat while true do if kb>14660 then wl,pe,sa,Wf=ce(Mn('<I4I4I4I4I4I4I4I4',Tl)),ce(Mn('<I4I4I4',cf)),{},1;kb=fn[-26316]or Dh(-26316,9339,26308);elseif kb<=3955 then if kb>2953 then if Wf<=#eh then kb=5318 else kb=fn[1670]or Dh(1670,56076,41121)end else return Qn(sa)end else zb(sa,Qe(wl,_c,pe,eh,Wf))Wf=Wf+64 _c=_c+1 kb=fn[-31607]or Dh(-31607,99032,1061)end end until kb==64167 end return function(yh,kf,Kj)return Rb(Kj,0,kf,yh)end end)();fl=(function()local Se,tb,mi,Ae,Oc,yn,si,mf,d,Gh,jf=bit32 .bnot,bit32 .bxor,bit32 .rshift,bit32 .lshift,bit32 .band,bit32 .bor,table.insert,table.unpack,string.rep,string.char,string.byte local function Ng(oo,wm)local tk,lj=mi(oo,wm),Ae(oo,32-wm)return Oc(yn(tk,lj),4294967295)end local bl bl=function(Jl)local ud={1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298}local function Ba(p)local ho,c,en,Dg,Be,Hg c,Dg={},function(v,Ne,Aj)c[v]=Tm(Ne,6046)-Tm(Aj,52260)return c[v]end Hg=c[13083]or Dg(13083,17778,63015)repeat while true do if Hg>14760 then p=p..d('\0',ho)Hg=c[27250]or Dg(27250,61850,11586)elseif Hg<=3779 then p=p..Gh(Oc(mi(en,56),255),Oc(mi(en,48),255),Oc(mi(en,40),255),Oc(mi(en,32),255),Oc(mi(en,24),255),Oc(mi(en,16),255),Oc(mi(en,8),255),Oc(en,255))return p else Be=#p;en=Be*8;p=p..'\128'ho=64-((Be+9)%64)if ho~=64 then Hg=c[3639]or Dg(3639,56730,38773)break end Hg=c[-14052]or Dg(-14052,23564,35536)end end until Hg==16804 end local function Ej(xc)local aa,h,gi,me,_n,Yi,cm,qj _n,aa={},function(hi,uh,Tf)_n[hi]=Tm(uh,45890)-Tm(Tf,23039)return _n[hi]end h=_n[8885]or aa(8885,80629,63821)repeat while true do if h<=34011 then if h>16883 then if h>25165 then return gi else si(gi,xc:sub((me-173),(me-173)+63))h=_n[3845]or aa(3845,56472,5846)end else Yi=Yi+cm;me=Yi;if Yi~=Yi then h=25398 else h=_n[702]or aa(702,105117,55522)end end elseif h>51427 then if h>57880 then gi={};qj,cm,Yi=(#xc)+173,64,174 h=_n[10839]or aa(10839,126896,55353)else me=Yi;if qj~=qj then h=25398 else h=43202 end end else if(cm>=0 and Yi>qj)or((cm<0 or cm~=cm)and Yi<qj)then h=25398 else h=_n[18287]or aa(18287,5282,8068)end end end until h==14747 end local function Mf(wi,ua)local Pa,ph,Mj,gk,mo,qf,Lc,sh,ec,ch,rk,L,ke,va,Kn,Cc,ba,Jh,Mb,Ge,ve,E,um,Nl,Uc,zc,Hd,rg Jh,rg={},function(jm,fc,De)Jh[jm]=Tm(fc,6455)-Tm(De,36493)return Jh[jm]end ph=Jh[-9948]or rg(-9948,52769,56259)repeat while true do if ph>31273 then if ph<=46622 then if ph<=34687 then mo={};Pa,ch,Hd=(64)+19,1,20 ph=60021 else Mb,zc,Lc,va,ec,rk,L,ke=mf(ua);Ge,ba,um=(64)+129,130,1 ph=Jh[-15575]or rg(-15575,63554,43460)end elseif ph>53694 then Cc=Hd;if Pa~=Pa then ph=Jh[-32380]or rg(-32380,55478,47815)else ph=Jh[-29918]or rg(-29918,35270,51169)end elseif ph<=47513 then return Oc(ua[1]+Mb,4294967295),Oc(ua[2]+zc,4294967295),Oc(ua[3]+Lc,4294967295),Oc(ua[4]+va,4294967295),Oc(ua[5]+ec,4294967295),Oc(ua[6]+rk,4294967295),Oc(ua[7]+L,4294967295),Oc(ua[8]+ke,4294967295)elseif ph<=47651 then Nl,Kn=tb(Ng(mo[(Cc-19)-15],7),Ng(mo[(Cc-19)-15],18),mi(mo[(Cc-19)-15],3)),tb(Ng(mo[(Cc-19)-2],17),Ng(mo[(Cc-19)-2],19),mi(mo[(Cc-19)-2],10));mo[(Cc-19)]=Oc(mo[(Cc-19)-16]+Nl+mo[(Cc-19)-7]+Kn,4294967295)ph=Jh[-31218]or rg(-31218,36511,838)else sh=ba;if Ge~=Ge then ph=47367 else ph=Jh[12520]or rg(12520,50614,8676)end end elseif ph<=14876 then if ph>7034 then if(um>=0 and ba>Ge)or((um<0 or um~=um)and ba<Ge)then ph=Jh[-32214]or rg(-32214,112658,26259)else ph=2724 end elseif ph>4575 then mo[(Cc-19)]=yn(Ae(jf(wi,((Cc-19)-1)*4+1),24),Ae(jf(wi,((Cc-19)-1)*4+2),16),Ae(jf(wi,((Cc-19)-1)*4+3),8),jf(wi,((Cc-19)-1)*4+4))ph=Jh[-16446]or rg(-16446,58585,31388)elseif ph>2624 then Uc,qf=tb(Ng(ec,6),Ng(ec,11),Ng(ec,25)),tb(Oc(ec,rk),Oc(Se(ec),L));Mj,gk,ve=Oc(ke+Uc+qf+ud[(sh-129)]+mo[(sh-129)],4294967295),tb(Ng(Mb,2),Ng(Mb,13),Ng(Mb,22)),tb(Oc(Mb,zc),Oc(Mb,Lc),Oc(zc,Lc));E=Oc(gk+ve,4294967295);ke=L L=rk rk=ec ec=Oc(va+Mj,4294967295)va=Lc Lc=zc zc=Mb Mb=Oc(Mj+E,4294967295)ph=Jh[26377]or rg(26377,55145,64404)else Hd=Hd+ch;Cc=Hd;if Hd~=Hd then ph=36151 else ph=18309 end end elseif ph<=22768 then if(ch>=0 and Hd>Pa)or((ch<0 or ch~=ch)and Hd<Pa)then ph=Jh[25581]or rg(25581,61849,54778)else ph=27228 end elseif ph<=25040 then ba=ba+um;sh=ba;if ba~=ba then ph=Jh[12211]or rg(12211,74794,2715)else ph=11544 end else if not((Cc-19)<=16)then ph=Jh[1718]or rg(1718,51220,39301)break else ph=Jh[24217]or rg(24217,46973,6885)break end ph=Jh[-11013]or rg(-11013,44188,9539)end end until ph==56348 end local qk,Df,Vg,if_,Df,Ki,zd,Li,Id,pk,ah,bh,Tg,qc,Id,zd,qc,ck,gm,Mk,Fk,D Ki,qk={},function(bg,Mh,Oj)Ki[bg]=Tm(Mh,58080)-Tm(Oj,16241)return Ki[bg]end bh=Ki[30145]or qk(30145,106934,41045)repeat while true do if bh<=33181 then if bh<=15560 then if bh<=7906 then if bh<=4394 then return if_ else if_=if_..Gh(Oc(mi(qc,24),255))if_=if_..Gh(Oc(mi(qc,16),255))if_=if_..Gh(Oc(mi(qc,8),255))if_=if_..Gh(Oc(qc,255))bh=Ki[-2171]or qk(-2171,113923,54456)end elseif bh>12686 then Fk={Mf(Df,Fk)}bh=Ki[15826]or qk(15826,124577,41618)else D,Li,ck=ipairs(Fk);if kn(D)~='function'then bh=Ki[-7292]or qk(-7292,6459,8834)break end;bh=Ki[-1176]or qk(-1176,98511,53604);end elseif bh>27964 then zd,qc=D(Li,ck);ck=zd;if ck==nil then bh=1399 else bh=7390 end else Id,Df=gm(Vg,pk);pk=Id;if pk==nil then bh=Ki[-13202]or qk(-13202,21769,45675)else bh=Ki[-10195]or qk(-10195,39619,164)end end elseif bh<=53498 then if bh<=45850 then Jl=Ba(Jl)Tg,Fk,if_=Ej(Jl),{1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225},''gm,Vg,pk=ipairs(Tg)if kn(gm)~='function'then bh=Ki[26373]or qk(26373,7452,15688)break end bh=Ki[6574]or qk(6574,111587,54740)else D,Li,ck=Gj(D)bh=Ki[11027]or qk(11027,5489,48134)end elseif bh>59279 then ah=Kh(gm);if ah~=nil and ah.__iter~=nil then bh=Ki[3823]or qk(3823,97749,62123)break elseif kn(gm)=='table'then bh=Ki[-13071]or qk(-13071,126962,2832)break end bh=Ki[22056]or qk(22056,12756,21415)elseif bh>55201 then if bh<=56140 then if bh<=55711 then gm,Vg,pk=Gj(gm)bh=Ki[-27176]or qk(-27176,30487,4328)else D,Li,ck=Mk.__iter(D)bh=Ki[25807]or qk(25807,27176,11231)end else Mk=Kh(D);if Mk~=nil and Mk.__iter~=nil then bh=Ki[14815]or qk(14815,116862,28512)break elseif kn(D)=='table'then bh=Ki[7634]or qk(7634,112481,44046)break end bh=Ki[-12346]or qk(-12346,15333,23450)end else gm,Vg,pk=ah.__iter(gm)bh=Ki[-28836]or qk(-28836,36331,14300)end end until bh==26890 end;return bl end)();local sb,oi,pm,no,od,nn,hg,Wa,bj,Bl,fk,qn,ko,kk,je,qi,Rn,Xe,hm,Vh,We,gh,B,Ek,A,Ha,yk,Ya=type,pcall,error,tonumber,assert,select,setmetatable,string.format,string.unpack,string.sub,string.byte,string.char,table.move,table.pack,table.create,table.insert,table.concat,coroutine.create,coroutine.yield,coroutine.resume,coroutine.close,bit32 .bor,bit32 .bxor,bit32 .band,bit32 .btest,bit32 .rshift,bit32 .lshift,bit32 .extract local G,pg,T,dd,eb,im=function(un)return sb(un)==('number')end,function(gn)return sb(gn)==('string')end,function(Th)return sb(Th)==('boolean')end,function(An)return sb(An)==('function')end,{{9,4,false},{1,2,false},{0,7,false},{9,4,true},{4,9,true},{0,7,true},{6,9,true},{1,4,true},{0,2,true},{9,4,true},{5,0,false},{2,8,true},{9,4,true},{0,5,false},{1,9,false},{3,9,true},{1,9,false},{7,4,false},{9,4,false},{5,9,true},{3,8,false},{4,4,false},{9,4,false},{9,4,false},{3,0,true},{9,7,true},{8,4,false},{7,4,false},{3,7,false},{8,4,false},{1,4,true},{1,2,false},{4,9,true},{9,6,true},{3,5,true},{1,4,false},{9,8,true},{8,4,false},{2,2,true},{2,0,false},{5,0,true},{5,2,true},{1,0,false},{5,6,false},{4,9,true},{5,0,true},{8,8,false},{0,6,false},{5,1,false},{0,1,true},{3,4,false},{3,4,true},{1,5,false},{9,5,true},{8,4,false},{1,2,true},{3,4,false},{0,7,true},{2,0,false},{1,7,true},{5,2,true},{3,4,false},{10,4,false},{6,4,false},{9,4,false},{4,4,false},{0,5,false},{1,5,true},{3,2,false},{2,8,true},{0,7,false},{6,4,false},{9,8,true},{3,8,false},{1,6,true},{9,4,false},{2,8,false},{9,7,true},{2,2,true},{2,7,true},{6,4,false},{5,9,true},{1,2,false},{9,9,false},{0,7,true},{5,7,true},{1,4,false},{1,4,true},{3,0,false},{1,2,true},{9,4,false},{9,5,true},{0,0,false},{5,2,false},{0,7,false},{1,9,false},{3,9,false},{9,2,true},{9,7,true},{3,4,false},{9,4,false},{5,6,true},{5,7,false},{6,4,false},{9,4,false},{7,9,true},{9,4,false},{5,0,true},{3,7,false},{9,4,false},{5,2,true},{10,4,false},{0,1,false},{9,6,true},{5,7,true},{3,6,true},{9,4,false},{3,5,true},{9,7,true},{10,4,false},{6,4,false},{2,5,true},{5,8,false},{7,4,false},{3,0,true},{0,4,true},{3,5,true},{0,1,false},{1,0,true},{1,1,false},{3,2,true},{5,5,true},{3,2,false},{5,6,true},{0,4,false},{9,4,true},{7,4,false},{2,0,false},{2,8,true},{2,6,false},{9,4,true},{2,6,false},{0,4,false},{9,0,false},{0,9,true},{9,4,true},{2,9,true},{5,7,false},{9,5,true},{9,6,true},{2,0,true},{5,5,true},{9,4,false},{4,8,false},{1,6,true},{3,4,true},{0,9,false},{5,1,true},{10,8,false},{5,5,true},{2,4,true},{5,8,true},{7,4,true},{5,0,false},{9,2,false},{0,8,false},{9,7,false},{3,7,true},{0,4,false},{9,9,false},{0,0,false},{4,7,false},{2,0,false},{0,4,true},{0,0,true},{3,2,true},{9,4,true},{0,6,true},{1,0,true},{6,4,false},{9,7,true},{5,2,false},{1,2,true},{9,0,false},{9,5,false},{1,1,true},{7,8,false},{9,4,false},{1,5,false},{8,4,false},{3,8,false},{1,2,false},{10,9,true},{1,0,false},{0,4,true},{9,8,true},{3,6,true},{0,0,false},{0,1,false},{2,2,true},{6,4,false},{8,9,true},{9,6,true},{1,5,false},{2,6,true},{8,4,true},{9,0,false},{1,2,true},{5,8,true},{1,9,false},{3,4,false},{0,4,false},{5,2,false},{9,4,false},{9,2,true},{9,0,false},{5,6,true},{3,8,false},{0,8,true},{8,4,false},{2,4,false},{6,4,false},{10,4,false},{5,1,false},{9,9,false},{3,6,true},{9,6,true},{9,4,true},{4,4,false},{0,2,true},{9,4,true},{7,4,true},{1,4,true},{9,0,true},{5,7,true},{10,4,false},{9,1,true},{5,5,false},{9,4,true},{3,0,true},{5,4,true},{1,2,true},{2,2,true},{3,4,false},{9,1,true},{1,2,true},{9,4,true},{5,6,false},{0,2,true},{3,0,true},{8,8,false},{5,6,false},{1,3,false},{2,1,false},{1,9,false},{5,0,true}},{[18309]={},[17653]={}}local function Xn(Pm)return if Pm<32768 then Pm else Pm-65536 end local function ie(so)return if so<8388608 then so else so-16777216 end local function Nd(fh)local vg=im[18309][fh]if vg then return vg end local aj,Vf=fh,1 local function Na()local Gc=bj(('B'),aj,Vf)Vf=Vf+1 return B(Gc,21)end local function Bn()local of=bj(('<I4'),aj,Vf)Vf=Vf+4 return B(of,-1190400491)end local function _b()local Si=bj(('<d'),aj,Vf)Vf=Vf+8 return Si end local function nf(ic)local Ml=bj(('c')..ic,aj,Vf)Vf=Vf+ic return Ml end local function Rj()local V,ll,lc,ee,Ab,Vc,oc,yb,Qd V,ee={},function(rb,x,xn)V[rb]=Tm(x,7575)-Tm(xn,25777)return V[rb]end oc=V[7122]or ee(7122,24148,21568)repeat while true do if oc>33212 then if oc<=51197 then if oc>42191 then lc=Vc;if Ab~=Ab then oc=V[11916]or ee(11916,53420,18777)else oc=55674 end else return B(ll,-1512717620)end elseif oc>58640 then Vc=Vc+yb;lc=Vc;if Vc~=Vc then oc=V[18015]or ee(18015,57216,18037)else oc=55674 end else if(yb>=0 and Vc>Ab)or((yb<0 or yb~=yb)and Vc<Ab)then oc=V[-12219]or ee(-12219,50038,23359)else oc=V[30286]or ee(30286,14647,27591)end end elseif oc<=5178 then ll=0;yb,Ab,Vc=1,(4)+156,156 oc=43596 elseif oc>5478 then oc=40787 break else Qd=Na();ll=gh(ll,yk(Ek(Qd,127),(lc-156)*7))if not A(Qd,128)then oc=V[-15229]or ee(-15229,28496,14740)break end oc=V[-9235]or ee(-9235,88524,14085)end end until oc==24945 end local function Sd()local qh,Gd,Qk,bd Qk,qh={},function(Ka,on,ei)Qk[Ka]=Tm(on,42707)-Tm(ei,16045)return Qk[Ka]end Gd=Qk[-17933]or qh(-17933,121170,38679)repeat while true do if Gd>50342 then if Gd>56290 then Gd=Qk[-31222]or qh(-31222,78605,35107);break;else bd=Rj();if not(bd==0)then Gd=Qk[10083]or qh(10083,78104,54803)break else Gd=Qk[7682]or qh(7682,78509,54146)break end Gd=57853 end elseif Gd>43822 then return nf(bd)else return('')end end until Gd==56912 end local function Qf(Sn)local Rf,id,N,db,_o,J,fm,Zj,Xm,gg,Kg,th,a th,Xm={},function(ac,mj,fo)th[ac]=Tm(mj,47048)-Tm(fo,3395)return th[ac]end a=th[-26668]or Xm(-26668,16633,57268)repeat while true do if a<=32391 then if a>13840 then if a>21007 then if gg==9 then a=th[31711]or Xm(31711,10093,27541)break elseif gg==8 then a=th[32281]or Xm(32281,6492,9565)break end a=th[-5229]or Xm(-5229,109288,9657)elseif a<=16661 then if a>16151 then if not(gg==1)then a=th[-11651]or Xm(-11651,33044,8868)break else a=th[15242]or Xm(15242,78357,46254)break end a=th[11271]or Xm(11271,124167,21482)else if not(gg==6)then a=th[-5942]or Xm(-5942,107549,56712)break else a=th[-17377]or Xm(-17377,81359,45583)break end a=th[14720]or Xm(14720,119001,32680)end elseif a>17185 then return Kg else if gg==3 then a=th[-28548]or Xm(-28548,79918,38030)break elseif not(gg==4)then a=th[-26050]or Xm(-26050,31881,33094)break else a=th[1588]or Xm(1588,16432,11535)break end a=th[14715]or Xm(14715,102192,18833)end elseif a>6242 then if a>9988 then fm[36711]=Ek(Ha(id,8),255)db=Ek(Ha(id,16),65535)fm[64116]=db fm[26978]=Xn(db)a=th[20507]or Xm(20507,115993,29672)else id=Bn();_o=Ek(id,255);Zj=eb[_o+1];gg,J,Kg=Zj[1],Zj[2],Zj[3];fm={[26978]=0,[32220]=J,[63743]=0,[34382]=0,[15244]=0,[19435]=0,[23581]=nil,[24007]=_o,[48560]=0,[64116]=0,[63]=0,[36711]=0,[9931]=0,[34632]=0,[48815]=0,[24751]=0};qi(Sn,fm)if not(gg==10)then a=th[-21081]or Xm(-21081,53909,11048)break else a=th[-10487]or Xm(-10487,99651,18209)break end a=th[-31702]or Xm(-31702,120033,25152)end else if not(gg==7)then a=th[-6336]or Xm(-6336,30205,20554)break else a=th[9828]or Xm(9828,108146,34380)break end a=th[7316]or Xm(7316,108724,9749)end elseif a<=48711 then if a>36293 then Rf=Bn();fm[24751]=Rf;qi(Sn,{})a=th[3393]or Xm(3393,224,32435)elseif a>34448 then fm[48815]=Ek(Ha(id,8),255)fm[36711]=Ek(Ha(id,16),255)fm[19435]=Ek(Ha(id,24),255)a=th[-17338]or Xm(-17338,122257,31600)else fm[19435]=Ek(Ha(id,8),255)fm[48815]=Ek(Ha(id,16),255)fm[36711]=Ek(Ha(id,24),255)a=th[25781]or Xm(25781,19784,2841)end elseif a>57450 then if a>61217 then if a>62751 then fm[36711]=Ek(Ha(id,8),255)fm[48815]=Ek(Ha(id,16),255)fm[19435]=Ek(Ha(id,24),255)a=th[-30959]or Xm(-30959,90030,63747)else if Kg then a=th[15792]or Xm(15792,101125,43770)break end a=th[-32029]or Xm(-32029,56350,9693)end else fm[19435]=Ek(Ha(id,8),255)fm[36711]=Ek(Ha(id,16),255)fm[48815]=Ek(Ha(id,24),255)a=th[-30571]or Xm(-30571,103073,15360)end elseif a<=53555 then if a<=52053 then fm[36711]=Ek(Ha(id,8),255)fm[19435]=Ek(Ha(id,16),255)fm[48815]=Ek(Ha(id,24),255)a=th[21126]or Xm(21126,16861,3244)else N=Ek(Ha(id,8),16777215);fm[15244]=N fm[9931]=ie(N)a=th[-21503]or Xm(-21503,104104,8313)end else fm[48815]=Ek(Ha(id,8),255)fm[19435]=Ek(Ha(id,16),255)fm[36711]=Ek(Ha(id,24),255)a=th[-31729]or Xm(-31729,77082,44015)end end until a==41182 end local function Ai(le,Hf)local jg,Mm,Ra,kd,Wd,zh,Tk,On,eo,bn bn,Mm={},function(he,Om,Ib)bn[he]=Tm(Om,35131)-Tm(Ib,33419)return bn[he]end Wd=bn[28832]or Mm(28832,21925,5531)repeat while true do if Wd>32492 then if Wd<=44754 then if Wd<=38164 then if Wd>36003 then if Wd<=36424 then le[63743]=Hf[le[26978]+1]Wd=bn[-31377]or Mm(-31377,100013,53856)else le[63743]=Hf[le[19435]+1]Wd=bn[-17707]or Mm(-17707,26445,44352)end else if zh==5 then Wd=bn[-7172]or Mm(-7172,30729,11012)break elseif zh==9 then Wd=bn[24284]or Mm(24284,69051,26554)break end Wd=bn[25533]or Mm(25533,112497,64788)end elseif Wd<=40821 then le[63743]=Hf[le[24751]+1]Wd=bn[-16100]or Mm(-16100,65991,18650)else le[63743]=Hf[Ya(le[24751],0,24)+1]le[34382]=Ya(le[24751],31,1)==1 Wd=bn[6050]or Mm(6050,74988,28071)end elseif Wd<=49798 then if Wd<=47184 then if Wd>45877 then if not(zh==8)then Wd=bn[1592]or Mm(1592,27259,37538)break else Wd=bn[-10963]or Mm(-10963,101052,63044)break end Wd=bn[8260]or Mm(8260,119919,7202)else le[63743]=Hf[le[9931]+1]Wd=bn[-1860]or Mm(-1860,115706,3741)end else Wd=bn[18117]or Mm(18117,100587,19523);break;end elseif Wd<=52580 then eo=Ek(Ha(On,10),1023);le[63]=Hf[eo+1]Wd=bn[18521]or Mm(18521,77615,26082)elseif Wd>53542 then if not(zh==3)then Wd=bn[25815]or Mm(25815,119168,19622)break else Wd=bn[17420]or Mm(17420,21546,43415)break end Wd=bn[-24346]or Mm(-24346,67955,17174)else On=le[24751];kd,Tk=Ha(On,30),Ek(Ha(On,20),1023);le[63743]=Hf[Tk+1]le[34632]=kd if kd==2 then Wd=bn[27836]or Mm(27836,67311,19113)break elseif kd==3 then Wd=bn[-14650]or Mm(-14650,17648,1243)break end Wd=bn[-19174]or Mm(-19174,101384,50179)end elseif Wd<=14642 then if Wd>11952 then le[63743]=Ya(le[24751],0,1)==1 le[34382]=Ya(le[24751],31,1)==1 Wd=bn[11053]or Mm(11053,72775,21594)else if not(zh==6)then Wd=bn[-16889]or Mm(-16889,20099,37321)break else Wd=bn[25581]or Mm(25581,98577,59908)break end Wd=bn[-18173]or Mm(-18173,101067,51150)end elseif Wd<=18072 then zh=le[32220];if zh==1 then Wd=bn[-13305]or Mm(-13305,23758,8669)break elseif zh==2 then Wd=bn[-2914]or Mm(-2914,113993,59318)break elseif not(zh==0)then Wd=bn[18297]or Mm(18297,99047,25488)break else Wd=bn[-11029]or Mm(-11029,119115,18451)break end Wd=48811 elseif Wd<=18319 then Ra,jg=Ek(Ha(On,10),1023),Ek(Ha(On,0),1023);le[63]=Hf[Ra+1]le[48560]=Hf[jg+1]Wd=bn[14593]or Mm(14593,23905,38692)else le[63743]=Ya(le[24751],0,16)Wd=bn[30203]or Mm(30203,121162,4941)end end until Wd==13064 end local function ad()local io,Dm,mh,nd,ro,Vi,Zm,Ac,bm,Fa,mb,ii,vc,Sm,ge,ul,jl,mn,oe,Of,Fl,Og,Sa,eg,Wl,Ud,ue,to,Kl,yl nd,Zm={},function(Gg,Oh,jo)nd[Gg]=Tm(Oh,44401)-Tm(jo,58039)return nd[Gg]end Dm=nd[20490]or Zm(20490,18061,18617)repeat while true do if Dm>32059 then if Dm<=53876 then if Dm<=45954 then if Dm>44610 then ue=Qf(Of)Dm=nd[-21804]or Zm(-21804,128535,3372)else Og=Og+Kl;Vi=Og;if Og~=Og then Dm=26387 else Dm=59407 end end elseif Dm<=46765 then if not(ue)then Dm=nd[-17901]or Zm(-17901,118627,20978)break else Dm=nd[-29302]or Zm(-29302,104739,12312)break end Dm=nd[14348]or Zm(14348,29812,36749)else ii=Rj();eg=je(ii);Sm=function()local yi,Oe,Ua,Zh,Kb yi,Kb={},function(Ob,Ih,om)yi[Ob]=Tm(Ih,46728)-Tm(om,8302)return yi[Ob]end Zh=yi[21943]or Kb(21943,28430,32589)repeat while true do if Zh<=21739 then if Zh<=11384 then if Zh<=3669 then if Zh>2781 then return Ua else Ua={}Zh=yi[7798]or Kb(7798,38225,14588)end else Ua=nil Zh=yi[-25677]or Kb(-25677,51089,17852)end elseif Zh<=19566 then if Zh>19054 then if Oe==0 then Zh=yi[2567]or Kb(2567,128815,35094)break elseif Oe==1 then Zh=yi[-16953]or Kb(-16953,5255,30657)break elseif not(Oe==4)then Zh=yi[24917]or Kb(24917,30193,21650)break else Zh=yi[-24744]or Kb(-24744,2159,16362)break end Zh=yi[-28205]or Kb(-28205,7294,49089)else Ua=_b()Zh=yi[3124]or Kb(3124,11561,45108)end else if not(Oe==2)then Zh=yi[17305]or Kb(17305,10173,42368)break else Zh=yi[-2399]or Kb(-2399,55455,31631)break end Zh=yi[28593]or Kb(28593,35459,4266)end elseif Zh<=36067 then Oe=Na();if not(Oe==6)then Zh=yi[-31169]or Kb(-31169,19891,37073)break else Zh=yi[-12578]or Kb(-12578,19794,53512)break end Zh=yi[27212]or Kb(27212,20036,52715)elseif Zh>39881 then Ua=Rj()Zh=yi[9759]or Kb(9759,10879,45534)else Ua=Sd()Zh=yi[26362]or Kb(26362,34253,1936)end end until Zh==32112 end Wl,io,ro=125,1,(ii)+124 Dm=nd[5957]or Zm(5957,31185,12037)end elseif Dm>60097 then Wl=Wl+io;Fa=Wl;if Wl~=Wl then Dm=6233 else Dm=18366 end elseif Dm<=58160 then if(bm>=0 and mb>jl)or((bm<0 or bm~=bm)and mb<jl)then Dm=18815 else Dm=nd[395]or Zm(395,54257,39308)end else if(Kl>=0 and Og>ul)or((Kl<0 or Kl~=Kl)and Og<ul)then Dm=26387 else Dm=27147 end end elseif Dm<=16357 then if Dm<=5665 then if Dm>2912 then Vi=Og;if ul~=ul then Dm=nd[-18459]or Zm(-18459,10622,65099)else Dm=nd[-11526]or Zm(-11526,78284,22041)end elseif Dm<=1305 then mn[(yl-146)]=ad()Dm=nd[-29347]or Zm(-29347,11695,60706)else Fa=Wl;if ro~=ro then Dm=6233 else Dm=nd[-28215]or Zm(-28215,2229,48305)end end elseif Dm<=8363 then if Dm<=7190 then ul,Og,Kl=(ge)+14,15,1 Dm=nd[19142]or Zm(19142,9784,38265)else yl=mb;if jl~=jl then Dm=18815 else Dm=56913 end end else eg[(Fa-124)]=Sm()Dm=nd[-19486]or Zm(-19486,109520,60888)end elseif Dm>24377 then if Dm>28436 then if Dm>30439 then if(Ac>=0 and oe>Sa)or((Ac<0 or Ac~=Ac)and oe<Sa)then Dm=47437 else Dm=nd[-6484]or Zm(-6484,74205,14889)end else mb=mb+bm;yl=mb;if mb~=mb then Dm=18815 else Dm=56913 end end elseif Dm<=26295 then ue=false Dm=nd[-4946]or Zm(-4946,10847,63956)elseif Dm<=26991 then vc=Rj();mn=je(vc);mb,bm,jl=147,1,(vc)+146 Dm=nd[17285]or Zm(17285,27977,17106)elseif Dm>27371 then oe=oe+Ac;to=oe;if oe~=oe then Dm=47437 else Dm=31877 end else Ai(Of[(Vi-14)],eg)Dm=nd[18111]or Zm(18111,17318,41879)end elseif Dm<=20006 then if Dm>17846 then if Dm<=18590 then if(io>=0 and Wl>ro)or((io<0 or io~=io)and Wl<ro)then Dm=6233 else Dm=nd[3297]or Zm(3297,16389,9921)end else return{[25729]=Ud,[62885]=Of,[32320]=mh,[42433]=(''),[29599]=Fl,[37474]=mn}end else mh,Ud,Fl,ge=Na(),Na(),Na(),Rj();Of,ue=je(ge),false;oe,Ac,Sa=174,1,(ge)+173 Dm=23134 end else to=oe;if Sa~=Sa then Dm=47437 else Dm=nd[-18718]or Zm(-18718,20403,33930)end end end until Dm==17294 end local oj=ad()im[18309][fh]=oj return oj end local tg=getfenv()local function fa(vj,Vn)vj=Nd(vj)local Dk=vj local function Ld(Gl,Nf)local function S(...)return{[37168]=nn(('#'),...),[65113]={...}}end local function k(fb,In,Re)local Ql,xm,Rc Rc,Ql={},function(xa,Od,Ze)Rc[xa]=Tm(Od,5091)-Tm(Ze,33903)return Rc[xa]end xm=Rc[-21005]or Ql(-21005,93612,5372)repeat while true do if xm>32356 then if In>Re then xm=Rc[-26166]or Ql(-26166,56394,17651)break end xm=16592 elseif xm<=10222 then return else return fb[In],k(fb,In+1,Re)end end until xm==46685 end local function Ia(Mi,Zl,Sf,Sk)local cc,Ie,bc,lo,Qc,oa,da,Dl,Sh,ja,y,vf,Hi,Ug,xg,hb,Yb,ld,Qh,rh,sd,Yb,zl,Md,wc,Yk,rf,be,Fe,ag,Ei,Xf,Xh,cn,ca,Vk,na,Hj,jd,Cf,dl,la,ql,jk,ae,Bf,U,dn,jb,Hm,Yl,ab,Ye,dk,Kd,Nm,Gb,vl,kg,Ve,pl,tm,Ti,lm,zk,n,Ok,r,Xd,Ck,al,mk,wc,Qb,Xc,Ni,vm,ha,Ef,Nn,e,Ff,Oi,_j,cn,gf,Ma,Ig,pn,Ri,xb,z,Ag,H,Fi,nb,Lf,ia,la,Ti,Jg,Qj,e,kc,df,Ln,cj,ea,xf,Hb,xd,Di,R,tf,Pd,Wh,ol Bf,mk={},function(Xl,Wj,Bk)Bf[Xl]=Tm(Wj,863)-Tm(Bk,19500)return Bf[Xl]end Hm=Bf[27654]or mk(27654,79610,11803)repeat while true do if Hm>32723 then if Hm<=49143 then if Hm<=41010 then if Hm<=37029 then if Hm>35043 then if Hm>36114 then if Hm<=36626 then if Hm>36417 then if Hm<=36584 then kc[24007]=30 Nm+=1 Hm=Bf[-9203]or mk(-9203,42639,16130)else Hb[63]=(function(Wg,zm)local Nh,qb,Ic,_m,vb,i,Yc,gd Yc,qb={},function(Wb,Vd,qo)Yc[Wb]=Tm(Vd,32690)-Tm(qo,2676)return Yc[Wb]end Ic=Yc[32335]or qb(32335,78524,65322)repeat while true do if Ic>31845 then if Ic>47544 then i=gd;if _m~=_m then Ic=5522 else Ic=10827 end else Nh=Nh..qn(B(fk(Wg,(i-162)+1),fk(zm,(i-162)%#zm+1)))Ic=Yc[18429]or qb(18429,89431,52432)end elseif Ic<=14569 then if Ic<=8174 then return Nh else if(vb>=0 and gd>_m)or((vb<0 or vb~=vb)and gd<_m)then Ic=5522 else Ic=36920 end end elseif Ic>23032 then gd=gd+vb;i=gd;if gd~=gd then Ic=Yc[-6426]or qb(-6426,48586,42642)else Ic=Yc[18812]or qb(18812,21132,2183)end else Nh=('');vb,_m,gd=1,(#Wg-1)+162,162 Ic=Yc[-7657]or qb(-7657,123464,45238)end end until Ic==337 end)(Hb[63],kc[63])Hm=Bf[24059]or mk(24059,95998,43746)end else Nm+=kc[26978]Hm=Bf[-32588]or mk(-32588,48657,50816)end elseif Hm<=36842 then if Hm<=36731 then if Hm<=36682 then Nm+=1 Hm=Bf[28737]or mk(28737,14119,19962)else Nm+=1 Hm=Bf[-23959]or mk(-23959,21386,21023)end else Nm-=1 Sf[Nm]={[24007]=65,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[16904]or mk(16904,69661,44172)end elseif Hm<=36942 then if Qb>103 then Hm=Bf[-3576]or mk(-3576,74705,14703)break else Hm=Bf[24378]or mk(24378,34450,29794)break end Hm=Bf[-7330]or mk(-7330,16231,17850)else if not(Qb>203)then Hm=Bf[-19974]or mk(-19974,70987,28245)break else Hm=Bf[-5860]or mk(-5860,114152,38869)break end Hm=Bf[-28054]or mk(-28054,76255,48114)end elseif Hm>35500 then Mi[kc[36711]]=je(kc[24751])Nm+=1 Hm=Bf[-9987]or mk(-9987,14354,17543)elseif Hm<=35282 then Nm+=kc[26978]Hm=Bf[19119]or mk(19119,29676,29245)else Xh=Ln-1 Hm=Bf[-18910]or mk(-18910,46600,20954)end elseif Hm>33840 then if Hm<=34363 then if Hm<=34161 then if Hm>34121 then if not(kc[19435]==59)then Hm=Bf[14277]or mk(14277,27702,20284)break else Hm=Bf[-15446]or mk(-15446,55920,59850)break end Hm=Bf[-31802]or mk(-31802,42030,14563)elseif Hm<=34114 then Nm+=kc[26978]Hm=Bf[-16842]or mk(-16842,52515,55286)else Lf=Zl[kc[63743]+1];pn=Lf[29599];rf=je(pn);Mi[kc[36711]]=Ld(Lf,rf)Qh,Yk,Di=1,84,(pn)+83 Hm=Bf[13876]or mk(13876,50017,57627)end else ql=kc[63743];Mi[kc[36711]]=tg[ql]or im[17653][ql]Nm+=1 Hm=Bf[-409]or mk(-409,74900,47365)end elseif Hm<=34524 then ag=Nf[kc[48815]+1];Mi[kc[36711]]=ag[3][ag[1]]Hm=Bf[-22505]or mk(-22505,59561,62840)elseif Hm>34585 then Nm+=1 Hm=Bf[-26646]or mk(-26646,50809,57000)else Mi[kc[36711]]=Mi[kc[48815]]-kc[63743]Hm=Bf[-9485]or mk(-9485,23757,24796)end elseif Hm>33421 then if Hm<=33662 then if Hm<=33588 then Ma=Vk-1 Hm=Bf[6805]or mk(6805,44519,49616)else Nm+=kc[26978]Hm=Bf[25052]or mk(25052,73369,42760)end else Fi=vm+Xh-1 Hm=Bf[-27571]or mk(-27571,86932,62790)end elseif Hm<=33130 then if Qb>64 then Hm=Bf[30638]or mk(30638,36647,10835)break else Hm=Bf[-18034]or mk(-18034,71748,3515)break end Hm=Bf[10122]or mk(10122,15808,18385)else if not(Qb>233)then Hm=Bf[19730]or mk(19730,27537,3736)break else Hm=Bf[24507]or mk(24507,18317,26562)break end Hm=Bf[-15462]or mk(-15462,55856,60129)end elseif Hm<=39199 then if Hm>38290 then if Hm>38831 then if Hm>39056 then Mi[kc[36711]]=nil Hm=Bf[-30272]or mk(-30272,21141,21252)else Kd,H,Yl=ia;if kn(Kd)~='function'then Hm=Bf[6958]or mk(6958,87648,12792)break end;Hm=Bf[30188]or mk(30188,109391,63747);end elseif Hm<=38638 then if not(Qb>50)then Hm=Bf[20224]or mk(20224,42203,23712)break else Hm=Bf[6212]or mk(6212,77779,44489)break end Hm=Bf[14727]or mk(14727,58757,63508)elseif Hm<=38718 then if not(Qb>47)then Hm=Bf[25155]or mk(25155,97456,44515)break else Hm=Bf[-22939]or mk(-22939,59603,36792)break end Hm=Bf[12069]or mk(12069,41691,8910)elseif Hm<=38771 then ko(Xd[65113],1,Xh,vm,Mi)Hm=Bf[-17458]or mk(-17458,37418,4863)else Nm-=1 Sf[Nm]={[24007]=80,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[5590]or mk(5590,22008,26665)end elseif Hm>37741 then Nm-=1 Sf[Nm]={[24007]=111,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[-8125]or mk(-8125,38199,12266)elseif Hm<=37539 then if Hm>37437 then ld=Sf[Nm];Nm+=1 xg=ld[36711]if xg==0 then Hm=Bf[-18601]or mk(-18601,52364,12884)break elseif not(xg==2)then Hm=Bf[10130]or mk(10130,109279,42206)break else Hm=Bf[11998]or mk(11998,65106,16581)break end Hm=Bf[-21467]or mk(-21467,79428,14497)else if not(Qb>62)then Hm=Bf[7193]or mk(7193,57957,39107)break else Hm=Bf[2794]or mk(2794,110928,36203)break end Hm=Bf[-3951]or mk(-3951,73336,42665)end else tm=Xn(B(kc[64116],46898));dl=Zl[tm+1];Oi=dl[29599];xf=je(Oi);Mi[B(kc[36711],221)]=Ld(dl,xf)Hj,na,Wh=136,(Oi)+135,1 Hm=Bf[23184]or mk(23184,57296,58455)end elseif Hm<=40195 then if Hm<=39544 then if not(kc[19435]==211)then Hm=Bf[25539]or mk(25539,57700,53451)break else Hm=Bf[13600]or mk(13600,22515,8160)break end Hm=Bf[-25984]or mk(-25984,20144,22369)else Mi[kc[36711]]=kc[63743]Hm=Bf[-18949]or mk(-18949,30640,3681)end elseif Hm<=40599 then if Hm<=40342 then if Hm>40220 then if not(Mi[kc[36711]]<Mi[kc[24751]])then Hm=Bf[-28365]or mk(-28365,107810,45531)break else Hm=Bf[10878]or mk(10878,47854,61125)break end Hm=Bf[-19129]or mk(-19129,68573,39372)else if kc[19435]==255 then Hm=Bf[-28856]or mk(-28856,64870,5993)break else Hm=Bf[6862]or mk(6862,61192,17201)break end Hm=Bf[24959]or mk(24959,37638,4507)end elseif Hm>40423 then if Qb>45 then Hm=Bf[-30175]or mk(-30175,55297,6216)break else Hm=Bf[-18779]or mk(-18779,32634,7605)break end Hm=Bf[1569]or mk(1569,29707,2206)elseif Hm>40386 then if not(Qb>248)then Hm=Bf[-29512]or mk(-29512,110935,43729)break else Hm=Bf[-32303]or mk(-32303,21400,22729)break end Hm=Bf[-27215]or mk(-27215,51745,56048)else if not(lo==2)then Hm=Bf[-17085]or mk(-17085,48808,50045)break else Hm=Bf[-12242]or mk(-12242,26267,4567)break end Hm=Bf[17490]or mk(17490,29880,23649)end elseif Hm<=40837 then if Hm>40680 then if kc[19435]==141 then Hm=Bf[1315]or mk(1315,58160,20431)break elseif not(kc[19435]==200)then Hm=Bf[11756]or mk(11756,52479,32440)break else Hm=Bf[31389]or mk(31389,86452,45588)break end Hm=Bf[-25650]or mk(-25650,74356,41637)else Ve=Sf[Nm];Nm+=1 Ff=Ve[36711]if not(Ff==0)then Hm=Bf[-24578]or mk(-24578,69213,5230)break else Hm=Bf[24151]or mk(24151,124150,48964)break end Hm=Bf[20663]or mk(20663,84667,12224)end elseif Hm>40921 then if kc[19435]==234 then Hm=Bf[29126]or mk(29126,73835,51075)break else Hm=Bf[11353]or mk(11353,46871,52618)break end Hm=Bf[-17869]or mk(-17869,51094,56843)else Ni,ca,lm=vf.__iter(Ni)Hm=Bf[-21425]or mk(-21425,98493,34953)end elseif Hm<=45012 then if Hm<=43035 then if Hm<=41655 then if Hm>41326 then if Hm>41567 then Ug=Ve[48815];be=ia[Ug];if not(be==nil)then Hm=Bf[-3124]or mk(-3124,77527,2096)break else Hm=Bf[-31130]or mk(-31130,78209,31638)break end Hm=59756 else if not Mi[kc[36711]]then Hm=Bf[-21662]or mk(-21662,68383,30222)break end Hm=Bf[3783]or mk(3783,50767,56898)end else Mi[kc[36711]]=Xc Hm=Bf[31604]or mk(31604,41696,9009)end elseif Hm>41979 then if Hm>42141 then if not(Yb[1]>=kc[36711])then Hm=Bf[2214]or mk(2214,53889,24205)break else Hm=Bf[-24700]or mk(-24700,9773,17751)break end Hm=Bf[-756]or mk(-756,112215,47591)elseif Hm>42083 then Mi[kc[36711]]=Mi[kc[48815]]-Mi[kc[19435]]Hm=Bf[-26864]or mk(-26864,40178,8487)else Mi[kc[36711]]=Mi[kc[48815]]*Mi[kc[19435]]Hm=Bf[-26330]or mk(-26330,30403,3798)end else Nm-=1 Sf[Nm]={[24007]=29,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[-20724]or mk(-20724,73083,42926)end elseif Hm>44073 then if Hm>44751 then if Hm>44990 then Ef=Nf[kc[48815]+1];Ef[3][Ef[1]]=Mi[kc[36711]]Hm=Bf[11834]or mk(11834,68679,36954)else Hb[63]=(function(Em,re)local Rd,Sj,ma,uc,Jd,Cg,ui,C ui,Jd={},function(Qi,xh,He)ui[Qi]=Tm(xh,17853)-Tm(He,56507)return ui[Qi]end C=ui[4013]or Jd(4013,122366,29796)repeat while true do if C>37580 then if C>59747 then Sj=('');Cg,ma,Rd=1,(#Em-1)+71,71 C=20045 else return Sj end elseif C<=25081 then if C<=16960 then Sj=Sj..qn(B(fk(Em,(uc-71)+1),fk(re,(uc-71)%#re+1)))C=ui[31717]or Jd(31717,67818,4267)else uc=Rd;if ma~=ma then C=ui[-31972]or Jd(-31972,70950,45442)else C=36287 end end elseif C>34691 then if(Cg>=0 and Rd>ma)or((Cg<0 or Cg~=Cg)and Rd<ma)then C=ui[-22513]or Jd(-22513,73185,43073)else C=ui[4008]or Jd(4008,31156,55662)end else Rd=Rd+Cg;uc=Rd;if Rd~=Rd then C=58210 else C=36287 end end end until C==6053 end)(Hb[63],kc[63])Hb[48560]=(function(Z,wk)local Ph,wj,Xa,Am,Aa,kj,b,Ad Ad,Aa={},function(Bc,sj,wn)Ad[Bc]=Tm(sj,47821)-Tm(wn,39355)return Ad[Bc]end Xa=Ad[12465]or Aa(12465,119541,15699)repeat while true do if Xa>38517 then if Xa>56349 then Ph=Ph..qn(B(fk(Z,(b-228)+1),fk(wk,(b-228)%#wk+1)))Xa=Ad[-11033]or Aa(-11033,103061,17693)elseif Xa<=49645 then b=kj;if Am~=Am then Xa=Ad[13432]or Aa(13432,59580,32969)else Xa=13625 end else Ph=('');kj,Am,wj=228,(#Z-1)+228,1 Xa=49290 end elseif Xa<=16501 then if Xa<=14108 then if(wj>=0 and kj>Am)or((wj<0 or wj~=wj)and kj<Am)then Xa=14591 else Xa=63409 end else return Ph end else kj=kj+wj;b=kj;if kj~=kj then Xa=Ad[-11633]or Aa(-11633,106268,30057)else Xa=Ad[6853]or Aa(6853,100929,25320)end end end until Xa==57621 end)(Hb[48560],kc[48560])Hm=Bf[1358]or mk(1358,64917,9179)end elseif Hm<=44584 then bc=Mi[kc[36711]];if not dd(bc)then Hm=Bf[25165]or mk(25165,45486,13677)break end Hm=1785 else Nm+=kc[26978]Hm=Bf[-16396]or mk(-16396,41001,15608)end elseif Hm<=43496 then if Hm>43308 then if Hm<=43438 then if not(Qb>22)then Hm=Bf[10339]or mk(10339,66771,27938)break else Hm=Bf[-17854]or mk(-17854,104718,44730)break end Hm=Bf[9064]or mk(9064,25669,30804)else Nm+=1 Hm=Bf[-32383]or mk(-32383,61867,35966)end else Nm+=kc[26978]Hm=Bf[-15711]or mk(-15711,25759,31026)end elseif Hm<=43691 then Nm+=kc[26978]Hm=Bf[6906]or mk(6906,67361,40432)else if not(Qb>107)then Hm=Bf[8379]or mk(8379,50774,60903)break else Hm=Bf[27172]or mk(27172,96528,37933)break end Hm=Bf[8965]or mk(8965,71647,44530)end elseif Hm<=47059 then if Hm<=46098 then if Hm<=45533 then if not(Mi[kc[36711]]==Mi[kc[24751]])then Hm=Bf[-14302]or mk(-14302,37251,9606)break else Hm=Bf[-661]or mk(-661,117763,44265)break end Hm=Bf[3851]or mk(3851,65052,34445)elseif Hm<=45719 then if Hm>45580 then Nm+=1 Hm=Bf[-6497]or mk(-6497,53784,53897)else Nm+=kc[26978]Hm=Bf[29640]or mk(29640,51398,54491)end else Mi[y+2]=Mi[y+3]Nm+=kc[26978]Hm=Bf[-32232]or mk(-32232,15684,18261)end elseif Hm<=46638 then if Hm>46421 then Nm-=1 Sf[Nm]={[24007]=189,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[-13831]or mk(-13831,17649,22816)elseif Hm>46256 then if not(Ff==1)then Hm=Bf[23729]or mk(23729,45338,53638)break else Hm=Bf[19341]or mk(19341,45231,23891)break end Hm=Bf[-25899]or mk(-25899,80316,6343)else if not(Qb>13)then Hm=Bf[20846]or mk(20846,54900,64560)break else Hm=Bf[-1755]or mk(-1755,107499,47878)break end Hm=Bf[24417]or mk(24417,24279,26314)end elseif Hm<=47033 then Mi[kc[36711]]=Mi[kc[48815]]+kc[63743]Hm=Bf[-27789]or mk(-27789,29765,2132)else if Qb>26 then Hm=Bf[-14943]or mk(-14943,84325,54850)break else Hm=Bf[32354]or mk(32354,72135,14924)break end Hm=Bf[17781]or mk(17781,59671,64394)end elseif Hm>48117 then if Hm<=48613 then Dl,Fe=Vh(ja[kc],Qj,Mi[y+1],Mi[y+2]);if not(not Dl)then Hm=Bf[2406]or mk(2406,82196,12542)break else Hm=Bf[-1839]or mk(-1839,89998,10321)break end Hm=Bf[-11752]or mk(-11752,108119,37795)else wc,Yb=Ni(ca,lm);lm=wc;if lm==nil then Hm=Bf[-28526]or mk(-28526,47109,50324)else Hm=42243 end end elseif Hm>47669 then if Qb>184 then Hm=Bf[-21726]or mk(-21726,84297,13876)break else Hm=Bf[16511]or mk(16511,80221,8134)break end Hm=Bf[17839]or mk(17839,37093,11572)elseif Hm<=47432 then if Qb>226 then Hm=Bf[-7105]or mk(-7105,39428,4686)break else Hm=Bf[-29103]or mk(-29103,86898,52046)break end Hm=Bf[8605]or mk(8605,51658,56287)elseif Hm>47541 then kc=Sf[Nm]Qb=kc[24007]Hm=Bf[1483]or mk(1483,48118,5254)else Ok,Hb=kc[34632],Sf[Nm+1];Hb[63743]=(function(Ak,Um)local sm,Zi,go,sk,Nk,Jk,Nb,uf go,Nb={},function(dc,Gn,ak)go[dc]=Tm(Gn,59625)-Tm(ak,16813)return go[dc]end sm=go[-23673]or Nb(-23673,69128,45332)repeat while true do if sm<=55094 then if sm<=50502 then if sm<=48764 then sk=Jk;if Zi~=Zi then sm=50356 else sm=go[11722]or Nb(11722,115198,5986)end elseif sm>49663 then return uf else Jk=Jk+Nk;sk=Jk;if Jk~=Jk then sm=50356 else sm=go[16633]or Nb(16633,8136,25972)end end else if(Nk>=0 and Jk>Zi)or((Nk<0 or Nk~=Nk)and Jk<Zi)then sm=go[3150]or Nb(3150,111170,54362)else sm=go[-27385]or Nb(-27385,96105,34033)end end elseif sm>59430 then uf=('');Nk,Zi,Jk=1,(#Ak-1)+135,135 sm=47173 else uf=uf..qn(B(fk(Ak,(sk-135)+1),fk(Um,(sk-135)%#Um+1)))sm=go[7628]or Nb(7628,5319,32073)end end until sm==40681 end)(Hb[63743],kc[63743])if Ok==2 then Hm=Bf[-2698]or mk(-2698,99236,48594)break elseif not(Ok==3)then Hm=Bf[-11022]or mk(-11022,59419,4189)break else Hm=Bf[-8077]or mk(-8077,65412,262)break end Hm=Bf[19054]or mk(19054,55785,1999)end elseif Hm>57200 then if Hm>61381 then if Hm<=63349 then if Hm>62002 then if Hm>62272 then if Hm>62446 then ea={[2]=Mi[Ve[48815]],[1]=2};ea[3]=ea xf[(xd-135)]=ea Hm=Bf[10909]or mk(10909,73839,28948)else dk,Ie,ae=kc[36711],kc[48815],kc[63743];zl=Mi[Ie];Mi[dk+1]=zl Mi[dk]=zl[ae]Nm+=1 Hm=Bf[10319]or mk(10319,22865,27456)end elseif Hm<=62096 then if not(kc[19435]==5)then Hm=Bf[23617]or mk(23617,104374,39970)break else Hm=Bf[10141]or mk(10141,31087,11072)break end Hm=Bf[23237]or mk(23237,35996,4365)else la,e=Kd(H,Yl);Yl=la;if Yl==nil then Hm=25111 else Hm=64231 end end elseif Hm<=61558 then rf[(Hi-83)]=Nf[ld[48815]+1]Hm=Bf[-25160]or mk(-25160,76124,9561)else Mi[kc[48815]][Mi[kc[19435]]]=Mi[kc[36711]]Hm=Bf[-28131]or mk(-28131,42772,15749)end elseif Hm>64397 then if Hm<=64836 then if Hm<=64619 then Mi[kc[36711]]=rh Hm=Bf[-32146]or mk(-32146,59846,52947)else Mi[kc[36711]]=Mi[kc[48815]]Hm=Bf[-27888]or mk(-27888,39880,10713)end elseif Hm<=65149 then if not(Qb>67)then Hm=Bf[-27393]or mk(-27393,93389,46540)break else Hm=Bf[10342]or mk(10342,70838,40489)break end Hm=Bf[-31504]or mk(-31504,35439,6818)else if not(Qb>193)then Hm=Bf[24136]or mk(24136,56421,39106)break else Hm=Bf[-22886]or mk(-22886,102541,38664)break end Hm=Bf[7219]or mk(7219,54444,59773)end elseif Hm>63932 then if Hm<=64261 then e[2]=e[3][e[1]]e[3]=e e[1]=2 ia[la]=nil Hm=Bf[24831]or mk(24831,90286,15676)else be={[1]=Ug,[3]=Mi}ia[Ug]=be Hm=Bf[-21324]or mk(-21324,74861,29162)end elseif Hm>63671 then if not(Qb>121)then Hm=Bf[-27905]or mk(-27905,78118,48253)break else Hm=Bf[-25562]or mk(-25562,80181,55799)break end Hm=Bf[12955]or mk(12955,61705,62360)else pm(Fe)Hm=Bf[-11527]or mk(-11527,62143,24651)end elseif Hm<=59310 then if Hm>58394 then if Hm>58888 then if Hm>59075 then if Hm<=59225 then ko(Mi,n,n+oa-1,kc[24751],Mi[da])Nm+=1 Hm=Bf[291]or mk(291,20010,22271)else Mi[kc[36711]]=kc[48815]==1 Nm+=kc[19435]Hm=Bf[4609]or mk(4609,46398,53139)end elseif Hm<=58955 then if Qb>179 then Hm=Bf[27802]or mk(27802,38478,17382)break else Hm=Bf[-11898]or mk(-11898,74273,3949)break end Hm=Bf[-28229]or mk(-28229,55331,58614)else if not(Qb>19)then Hm=Bf[1742]or mk(1742,56265,803)break else Hm=Bf[-23476]or mk(-23476,64630,42663)break end Hm=Bf[4246]or mk(4246,24927,25458)end elseif Hm<=58701 then if Hm>58552 then if kc[19435]==196 then Hm=Bf[-20677]or mk(-20677,67228,15657)break else Hm=Bf[15691]or mk(15691,52107,25568)break end Hm=Bf[17093]or mk(17093,52185,55752)else Mi[kc[36711]]={}Hm=Bf[-14524]or mk(-14524,40837,9748)end else Hj=Hj+Wh;xd=Hj;if Hj~=Hj then Hm=Bf[3275]or mk(3275,51262,54419)else Hm=Bf[28026]or mk(28026,67767,54311)end end elseif Hm<=57793 then if not(kc[19435]==193)then Hm=Bf[29494]or mk(29494,71238,14554)break else Hm=Bf[-25532]or mk(-25532,76229,9811)break end Hm=Bf[20631]or mk(20631,58625,65424)else da,n,oa=kc[36711],kc[48815],kc[19435]-1;if not(oa==-1)then Hm=Bf[-22659]or mk(-22659,83743,4305)break else Hm=Bf[-29231]or mk(-29231,49733,52970)break end;Hm=59203;end elseif Hm>60332 then if Hm>60835 then if Hm>61026 then Nm+=1 Hm=Bf[15697]or mk(15697,21902,26627)else Nm+=1 Hm=Bf[-3144]or mk(-3144,25359,24962)end else pm((''))Hm=Bf[18219]or mk(18219,68314,51300)end elseif Hm>59671 then if Hm>59737 then xf[(xd-135)]=be Hm=Bf[-22332]or mk(-22332,106816,61451)elseif Hm<=59724 then Nm+=kc[26978]Hm=Bf[-12287]or mk(-12287,65517,34364)else z,Pd,gf=kc[63743],kc[34382],Mi[kc[36711]];if(gf==z)~=Pd then Hm=Bf[-22402]or mk(-22402,54426,1555)break else Hm=Bf[-10568]or mk(-10568,41526,53714)break end Hm=Bf[24563]or mk(24563,33798,6299)end else if Qb>155 then Hm=Bf[-7572]or mk(-7572,72199,49579)break else Hm=Bf[26253]or mk(26253,39317,21485)break end Hm=Bf[-25971]or mk(-25971,21708,26845)end elseif Hm<=53092 then if Hm<=51090 then if Hm<=50044 then if Hm>49475 then if not(not dd(Mi[kc[36711]]))then Hm=Bf[2949]or mk(2949,39604,22658)break else Hm=Bf[-9310]or mk(-9310,76745,30667)break end Hm=Bf[-30547]or mk(-30547,42230,28224)elseif Hm>49236 then Yk=Yk+Qh;Hi=Yk;if Yk~=Yk then Hm=Bf[12433]or mk(12433,29268,29253)else Hm=6430 end else Nm-=1 Sf[Nm]={[24007]=179,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[2344]or mk(2344,69196,38493)end elseif Hm>50652 then vf=Kh(Ni);if vf~=nil and vf.__iter~=nil then Hm=Bf[-740]or mk(-740,73412,12839)break elseif kn(Ni)=='table'then Hm=Bf[13060]or mk(13060,62532,57011)break end Hm=Bf[2398]or mk(2398,64970,29556)elseif Hm>50481 then if Hm>50560 then if Qb>135 then Hm=Bf[24057]or mk(24057,38218,20709)break else Hm=Bf[13260]or mk(13260,64737,24740)break end Hm=Bf[15295]or mk(15295,22603,25694)else if Fe==-2 then Hm=Bf[22943]or mk(22943,33400,32476)break else Hm=Bf[16735]or mk(16735,47507,8619)break end Hm=Bf[-26351]or mk(-26351,45690,12975)end else if kc[19435]==251 then Hm=Bf[-5314]or mk(-5314,43262,22477)break else Hm=Bf[-27507]or mk(-27507,98542,51890)break end Hm=Bf[29876]or mk(29876,54681,59400)end elseif Hm>52202 then if Hm<=52629 then if Qb>110 then Hm=Bf[-27849]or mk(-27849,68049,39490)break else Hm=Bf[-6]or mk(-6,42527,22894)break end Hm=Bf[6064]or mk(6064,74580,41285)elseif Hm<=52831 then if Hm<=52713 then if Qb>137 then Hm=Bf[-6073]or mk(-6073,64269,47826)break else Hm=Bf[13967]or mk(13967,89332,54792)break end Hm=Bf[-30000]or mk(-30000,42725,16180)else Nm+=kc[26978]Hm=Bf[-20392]or mk(-20392,56426,57535)end else jb={Qj(Mi[y+1],Mi[y+2])};ko(jb,1,Jg,y+3,Mi)if Mi[y+3]~=nil then Hm=Bf[22927]or mk(22927,105300,43158)break else Hm=Bf[-13742]or mk(-13742,63402,28609)break end Hm=Bf[20307]or mk(20307,65449,34424)end elseif Hm>51691 then Qc,Cf,dn=kc[63743],kc[34382],Mi[kc[36711]];if not((T(dn)and(dn==Qc))~=Cf)then Hm=Bf[19108]or mk(19108,19068,24145)break else Hm=Bf[4767]or mk(4767,11725,17791)break end Hm=Bf[286]or mk(286,78171,45902)elseif Hm<=51517 then if not(Qb>209)then Hm=Bf[-28062]or mk(-28062,55870,1263)break else Hm=Bf[17099]or mk(17099,88710,51657)break end Hm=Bf[-21817]or mk(-21817,35762,6759)else Hm=Bf[5836]or mk(5836,1668,18917);break;end elseif Hm<=55125 then if Hm<=53753 then if Hm<=53379 then if Qb>189 then Hm=Bf[2196]or mk(2196,27224,24592)break else Hm=Bf[-26727]or mk(-26727,54032,13331)break end Hm=Bf[-20986]or mk(-20986,38034,10503)else Nm+=1 Hm=Bf[9969]or mk(9969,64116,35493)end elseif Hm>54165 then if Hm>54238 then if Qb>215 then Hm=Bf[-21219]or mk(-21219,45469,57837)break else Hm=Bf[-30388]or mk(-30388,52526,15440)break end Hm=Bf[5608]or mk(5608,53601,54192)else Mi[kc[36711]]=Mi[kc[48815]]*kc[63743]Hm=Bf[2513]or mk(2513,25046,25547)end elseif Hm>54098 then Fi,Nm,ia,ja,Md=-1,1,hg({},{__mode=('vs')}),hg({},{__mode=('ks')}),false;Hm=Bf[-18360]or mk(-18360,65731,40150);else if not(Qb>134)then Hm=Bf[27926]or mk(27926,69030,36987)break else Hm=Bf[4413]or mk(4413,58637,1290)break end Hm=Bf[-25901]or mk(-25901,19223,22922)end elseif Hm>56076 then if Hm>56732 then if Hm<=56949 then if not(Qb>177)then Hm=Bf[-24966]or mk(-24966,55376,33731)break else Hm=Bf[-200]or mk(-200,71961,14192)break end Hm=Bf[-1115]or mk(-1115,51257,54504)else cc=(function(...)for cd,qd,m,fi,pf,Bh,rc,am,Cm,I,sf,fj,Pf,Mg,ef,Zd,M,ff,Uk,Eb,Dn,Pn,bo,Tn,ya,Wn,Gk,yd,Qm,kh,Za,Pi,ij,Qa,wa,wg,Fg,ih,Ed,La,hh,de,Fb,we,Gf,Ol,an,pb,Ul,q,Jj,Lb,ym,zg,_d,ga,Te,td,ta,Cd,Oa,Ec,Gm,hd,bb,cg,Vj,mm,Je,l,ek,jc,ob,Fd,Jm,Hc,Vm,lf,Pc,Q,Yg,gc,di,sc,jj,sn,ig,sg,Y,dm,Xj,ra,hf,Tj,_g,Bd,wb,Zb,pc,nl,Uh,nk,rl,lg,Yf,wd,po,Yd,Kk,Eg,Ce,zj,Xb,Db,Hl,gj,ki,Hh,Ca,ed,il,zf,_l,Cj,fd,qg,ml,oh,Bm,u,Sl,Rg,Bg,Ta,ng,rn,Ch,tn,ok,Dj,tl,bi,Un,vi,za,ib,do_,Ik,En,pi,Lg,hj,P,vd,Ui,Ah,cb,Hn,bf,nh,ln,Cl,li,fe,W,tc,Cb,Dd,bk,xo,Yj,Pj,Rl,dg,gb,km,_e,xj,Fm,Ub in...do hm({cd,qd,m,fi,pf,Bh,rc,am,Cm,I,sf,fj,Pf,Mg,ef,Zd,M,ff,Uk,Eb,Dn,Pn,bo,Tn,ya,Wn,Gk,yd,Qm,kh,Za,Pi,ij,Qa,wa,wg,Fg,ih,Ed,La,hh,de,Fb,we,Gf,Ol,an,pb,Ul,q,Jj,Lb,ym,zg,_d,ga,Te,td,ta,Cd,Oa,Ec,Gm,hd,bb,cg,Vj,mm,Je,l,ek,jc,ob,Fd,Jm,Hc,Vm,lf,Pc,Q,Yg,gc,di,sc,jj,sn,ig,sg,Y,dm,Xj,ra,hf,Tj,_g,Bd,wb,Zb,pc,nl,Uh,nk,rl,lg,Yf,wd,po,Yd,Kk,Eg,Ce,zj,Xb,Db,Hl,gj,ki,Hh,Ca,ed,il,zf,_l,Cj,fd,qg,ml,oh,Bm,u,Sl,Rg,Bg,Ta,ng,rn,Ch,tn,ok,Dj,tl,bi,Un,vi,za,ib,do_,Ik,En,pi,Lg,hj,P,vd,Ui,Ah,cb,Hn,bf,nh,ln,Cl,li,fe,W,tc,Cb,Dd,bk,xo,Yj,Pj,Rl,dg,gb,km,_e,xj,Fm,Ub})end;hm(-2)end);ja[Sh]=Xe(cc)Hm=Bf[15551]or mk(15551,34491,12999)end elseif Hm>56547 then R,Vk=kc[36711],kc[48815];ol=Vk-1;if not(ol==-1)then Hm=Bf[-14760]or mk(-14760,33805,18532)break else Hm=Bf[-28626]or mk(-28626,86638,46522)break end Hm=8380 elseif Hm>56462 then Nm-=1 Sf[Nm]={[24007]=37,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[23592]or mk(23592,72417,43824)else Nm-=1 Sf[Nm]={[24007]=27,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[32268]or mk(32268,69237,38564)end elseif Hm<=55415 then if Hm<=55180 then Gb=Kh(Kd);if Gb~=nil and Gb.__iter~=nil then Hm=Bf[12695]or mk(12695,81744,46466)break elseif kn(Kd)=='table'then Hm=Bf[26944]or mk(26944,84036,16193)break end Hm=Bf[24479]or mk(24479,74284,25278)else Kd,H,Yl=Gj(Kd)Hm=Bf[-16510]or mk(-16510,116561,40193)end elseif Hm>55611 then al=Xn(B(kc[64116],60400));Mi[B(kc[36711],199)]=al Hm=Bf[20023]or mk(20023,15879,18074)else Ti,cn=vl(cj,sd);sd=Ti;if sd==nil then Hm=Bf[-20708]or mk(-20708,73099,6408)else Hm=15102 end end elseif Hm<=16249 then if Hm>8090 then if Hm<=12149 then if Hm>10142 then if Hm>11087 then if lo==3 then Hm=Bf[21243]or mk(21243,73116,45613)break end Hm=Bf[-26378]or mk(-26378,46946,143)elseif Hm<=10562 then if Hm<=10389 then if Hm>10296 then Ni,ca,lm=ia;if kn(Ni)~='function'then Hm=Bf[8774]or mk(8774,80803,15923)break end;Hm=Bf[865]or mk(865,95012,64786);elseif Hm>10235 then if not(Qb>98)then Hm=Bf[14035]or mk(14035,5217,22897)break else Hm=Bf[-14160]or mk(-14160,64678,29089)break end Hm=Bf[30399]or mk(30399,69912,37769)else vm,r,Ln=B(kc[36711],39),B(kc[48815],157),B(kc[19435],59);xb,U=r==0 and Fi-vm or r-1,Mi[vm];Xd=S(U(k(Mi,vm+1,vm+xb)));Xh=Xd[37168];if Ln==0 then Hm=Bf[-29420]or mk(-29420,79374,64882)break else Hm=Bf[20438]or mk(20438,46512,24829)break end;Hm=38753;end elseif Hm>10511 then Nm+=kc[26978]Hm=Bf[32642]or mk(32642,68732,37037)else if not(not dd(Mi[kc[36711]]))then Hm=Bf[-22330]or mk(-22330,78499,52188)break else Hm=Bf[-4175]or mk(-4175,11361,21171)break end Hm=43532 end elseif Hm>10738 then tg[kc[63743]]=Mi[kc[36711]]Nm+=1 Hm=Bf[-9913]or mk(-9913,78782,45587)else if Qb>42 then Hm=Bf[-31466]or mk(-31466,62867,11353)break else Hm=Bf[-16596]or mk(-16596,24345,27301)break end Hm=Bf[31472]or mk(31472,43527,15002)end elseif Hm<=9048 then if Hm<=8682 then if Hm<=8364 then if Hm<=8349 then Mi[kc[36711]]=Mi[kc[48815]][Mi[kc[19435]]]Hm=Bf[32680]or mk(32680,14525,17772)else if not(Qb>92)then Hm=Bf[-17619]or mk(-17619,86673,8118)break else Hm=Bf[3598]or mk(3598,53991,18875)break end Hm=Bf[21339]or mk(21339,57254,59003)end elseif Hm>8383 then Mi[kc[36711]]=rh[kc[63]][kc[48560]]Hm=Bf[8812]or mk(8812,38491,24902)else return k(Mi,R,R+Ma-1)end else if not(Qb>105)then Hm=Bf[28228]or mk(28228,31991,10709)break else Hm=Bf[10454]or mk(10454,79408,52144)break end Hm=Bf[2853]or mk(2853,13687,20394)end elseif Hm<=9419 then Nm+=1 Hm=Bf[-15713]or mk(-15713,64964,34773)elseif Hm>9620 then if Hm>9737 then if not(Mi[kc[36711]]<=Mi[kc[24751]])then Hm=Bf[-16291]or mk(-16291,51848,2024)break else Hm=Bf[23274]or mk(23274,32506,5636)break end Hm=Bf[-22426]or mk(-22426,30260,3813)else Mi[kc[36711]]=#Mi[kc[48815]]Hm=Bf[28489]or mk(28489,28542,30035)end elseif Hm>9511 then Nm+=kc[26978]Hm=Bf[-19349]or mk(-19349,47394,52215)else if Qb>4 then Hm=Bf[14500]or mk(14500,61928,38247)break else Hm=Bf[13858]or mk(13858,49741,49605)break end Hm=Bf[1334]or mk(1334,29865,2424)end elseif Hm<=14459 then if Hm>13506 then if Hm<=13904 then if not(Qb>31)then Hm=Bf[-18728]or mk(-18728,41275,10357)break else Hm=Bf[-6151]or mk(-6151,24174,17099)break end Hm=Bf[25134]or mk(25134,19508,20709)elseif Hm>14020 then if not(not Md)then Hm=Bf[-18630]or mk(-18630,37031,32725)break else Hm=Bf[9082]or mk(9082,95782,63419)break end Hm=Bf[24908]or mk(24908,49261,12063)else Nm+=1 Hm=Bf[6236]or mk(6236,32858,7247)end elseif Hm>13153 then if Hm<=13263 then y,Jg=kc[36711],kc[63743];Fi=y+6 Qj=Mi[y]if not(dd(Qj))then Hm=Bf[-10530]or mk(-10530,89120,61150)break else Hm=Bf[3662]or mk(3662,100031,64250)break end Hm=Bf[-10473]or mk(-10473,60553,61720)elseif Hm>13338 then if not(Qb>117)then Hm=Bf[-12189]or mk(-12189,38711,10204)break else Hm=Bf[2788]or mk(2788,89610,10262)break end Hm=Bf[17550]or mk(17550,48495,51106)else xd=Hj;if na~=na then Hm=Bf[18632]or mk(18632,56107,59902)else Hm=29661 end end elseif Hm<=13045 then if true then Hm=Bf[-17852]or mk(-17852,63701,34955)else Hm=Bf[12994]or mk(12994,95474,37817)end elseif Hm>13113 then Nm-=1 Sf[Nm]={[24007]=61,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[9973]or mk(9973,66541,33340)else if Qb>1 then Hm=Bf[-7458]or mk(-7458,61183,16200)break else Hm=Bf[-11706]or mk(-11706,46449,19356)break end Hm=Bf[10249]or mk(10249,73680,42433)end elseif Hm<=15362 then if Hm<=15049 then if Hm>14823 then tf=Kh(vl);if tf~=nil and tf.__iter~=nil then Hm=Bf[3790]or mk(3790,59690,57189)break elseif kn(vl)=='table'then Hm=Bf[759]or mk(759,88920,38867)break end Hm=Bf[20470]or mk(20470,111626,37455)else Sh=Sf[Nm+kc[26978]];if not(ja[Sh]==nil)then Hm=Bf[2724]or mk(2724,4958,17700)break else Hm=Bf[14187]or mk(14187,106972,36858)break end Hm=Bf[29119]or mk(29119,41278,55108)end elseif Hm>15213 then if Qb>251 then Hm=Bf[29634]or mk(29634,55363,12764)break else Hm=Bf[-18725]or mk(-18725,80099,51241)break end Hm=Bf[16219]or mk(16219,50551,57258)elseif Hm>15099 then We(cn)ja[Ti]=nil Hm=Bf[18865]or mk(18865,66588,25213)else if Qb>241 then Hm=Bf[-24803]or mk(-24803,69649,14683)break else Hm=Bf[-26405]or mk(-26405,55911,7079)break end Hm=Bf[-27466]or mk(-27466,50360,55657)end elseif Hm<=15759 then kg=kc[63743];Mi[kc[48815]][kg]=Mi[kc[36711]]Nm+=1 Hm=Bf[-25570]or mk(-25570,35866,4239)elseif Hm>15919 then oa=Fi-n+1 Hm=Bf[14324]or mk(14324,82706,5414)else if not(Qb>29)then Hm=Bf[29161]or mk(29161,121393,43779)break else Hm=Bf[18387]or mk(18387,80317,59271)break end Hm=Bf[1399]or mk(1399,19662,20675)end elseif Hm>3691 then if Hm>5707 then if Hm<=6495 then if Hm<=6131 then Nm+=1 Hm=Bf[-25028]or mk(-25028,74761,47256)elseif Hm>6401 then if(Qh>=0 and Yk>Di)or((Qh<0 or Qh~=Qh)and Yk<Di)then Hm=Bf[7497]or mk(7497,22028,28317)else Hm=Bf[5813]or mk(5813,60076,7096)end else jk=kc[34382];if(Mi[kc[36711]]==nil)~=jk then Hm=Bf[-32445]or mk(-32445,46246,11254)break else Hm=Bf[22529]or mk(22529,102392,45413)break end Hm=Bf[18078]or mk(18078,14156,19805)end elseif Hm<=6833 then if Hm>6541 then Xf=kc[63743];Mi[kc[36711]]=Mi[kc[48815]][Xf]Nm+=1 Hm=Bf[-8566]or mk(-8566,42891,15902)else if Qb>7 then Hm=Bf[-28261]or mk(-28261,72671,9274)break else Hm=Bf[11290]or mk(11290,65871,12358)break end Hm=Bf[-5603]or mk(-5603,46171,51278)end else Yb[2]=Yb[3][Yb[1]]Yb[3]=Yb Yb[1]=2 ia[wc]=nil Hm=Bf[-12308]or mk(-12308,61196,24890)end elseif Hm>4782 then if Hm>5056 then if Hm<=5292 then if Hm<=5276 then if Ff==2 then Hm=Bf[31787]or mk(31787,61929,51571)break end Hm=Bf[2387]or mk(2387,63403,17104)else hb,Ye=kc[48815],kc[19435];Ag,Xc=oi(Rn,Mi,(''),hb,Ye);if not(not Ag)then Hm=Bf[29626]or mk(29626,68763,9077)break else Hm=Bf[18695]or mk(18695,71191,35655)break end Hm=41067 end else if Qb>54 then Hm=Bf[31295]or mk(31295,98919,35740)break else Hm=Bf[-32552]or mk(-32552,47990,56255)break end Hm=Bf[5078]or mk(5078,71610,44655)end elseif Hm<=4837 then Nm-=1 Sf[Nm]={[24007]=99,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[7935]or mk(7935,64505,35368)else Hi=Yk;if Di~=Di then Hm=Bf[-21626]or mk(-21626,47067,52686)else Hm=Bf[10632]or mk(10632,47391,60686)end end else pm((''))Hm=Bf[-3088]or mk(-3088,67637,11634)end elseif Hm>1685 then if Hm>2466 then if Hm>2891 then if not(kc[19435]==14)then Hm=Bf[-4402]or mk(-4402,110008,34357)break else Hm=Bf[-6426]or mk(-6426,107376,36787)break end Hm=Bf[-9327]or mk(-9327,31667,2662)elseif Hm>2742 then if not(Mi[kc[36711]]<Mi[kc[24751]])then Hm=Bf[7163]or mk(7163,46208,16928)break else Hm=Bf[-30062]or mk(-30062,94423,45633)break end Hm=Bf[1146]or mk(1146,37210,4943)else if Qb>163 then Hm=Bf[7876]or mk(7876,79310,14072)break else Hm=Bf[-27193]or mk(-27193,37555,21332)break end Hm=Bf[-30701]or mk(-30701,59473,62528)end elseif Hm>1889 then Mi[kc[36711]]=rh[kc[63]]Hm=Bf[29383]or mk(29383,36987,26534)else Nm+=kc[26978]Hm=Bf[-29149]or mk(-29149,70323,37734)end elseif Hm<=752 then if Hm>352 then lo,Ck=kc[34632],kc[63743];rh=tg[Ck]or im[17653][Ck];if not(lo==1)then Hm=Bf[-3670]or mk(-3670,92894,34815)break else Hm=Bf[-14382]or mk(-14382,126489,48559)break end Hm=26522 elseif Hm>282 then if not(Mi[kc[36711]]==Mi[kc[24751]])then Hm=Bf[8775]or mk(8775,123793,48781)break else Hm=Bf[22923]or mk(22923,95851,36730)break end Hm=Bf[-32746]or mk(-32746,24194,26391)else Nm-=1 Sf[Nm]={[24007]=62,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[-5200]or mk(-5200,26698,29791)end elseif Hm>1078 then pl=Mi[kc[48815]];Mi[kc[36711]]=if pl then pl else kc[63743]or false Hm=Bf[-22464]or mk(-22464,57533,64876)else Nm+=1 Hm=Bf[-27695]or mk(-27695,21738,26943)end elseif Hm>24605 then if Hm<=28693 then if Hm<=26838 then if Hm>25816 then Nm+=1 Hm=Bf[23140]or mk(23140,66815,39122)elseif Hm>25417 then Ni,ca,lm=Gj(Ni)Hm=Bf[-26650]or mk(-26650,89791,53903)elseif Hm>25243 then if(nb>=0 and Ri>zk)or((nb<0 or nb~=nb)and Ri<zk)then Hm=Bf[10724]or mk(10724,102014,41114)else Hm=17538 end elseif Hm<=25118 then vl,cj,sd=ja;if kn(vl)~='function'then Hm=Bf[13045]or mk(13045,45494,13542)break end;Hm=Bf[-20656]or mk(-20656,77229,6700);else if Qb>28 then Hm=Bf[-10850]or mk(-10850,74072,46210)break else Hm=Bf[-1782]or mk(-1782,59737,31049)break end Hm=Bf[3934]or mk(3934,57262,58979)end elseif Hm<=28151 then if Hm<=27864 then if not(kc[19435]==179)then Hm=Bf[11297]or mk(11297,57545,20221)break else Hm=Bf[30862]or mk(30862,96449,35257)break end Hm=Bf[-16811]or mk(-16811,46231,51466)else xf[(xd-135)]=Nf[Ve[48815]+1]Hm=Bf[1368]or mk(1368,91776,13259)end elseif Hm<=28376 then ha=Sk[37168]Fi=jd+ha-1 Hm=Bf[-15453]or mk(-15453,83125,39692)else if Qb>141 then Hm=Bf[-24828]or mk(-24828,82597,34764)break else Hm=Bf[31355]or mk(31355,84965,14122)break end Hm=Bf[11578]or mk(11578,68640,37105)end elseif Hm<=30574 then if Hm>29554 then if Hm<=29947 then if(Wh>=0 and Hj>na)or((Wh<0 or Wh~=Wh)and Hj<na)then Hm=Bf[-26871]or mk(-26871,53841,53824)else Hm=Bf[22908]or mk(22908,41197,18663)end elseif Hm<=30106 then Nm+=kc[26978]Hm=Bf[16642]or mk(16642,36170,5983)elseif Hm<=30182 then if not(Qb>63)then Hm=Bf[6917]or mk(6917,84631,64384)break else Hm=Bf[14706]or mk(14706,50074,29617)break end Hm=Bf[-10917]or mk(-10917,39392,9265)else if Qb>145 then Hm=Bf[25115]or mk(25115,48810,50779)break else Hm=Bf[4288]or mk(4288,54629,30466)break end Hm=Bf[26040]or mk(26040,29736,2297)end elseif Hm<=29087 then ko(Sk[65113],1,ha,jd,Mi)Hm=Bf[-1132]or mk(-1132,28633,30152)else if Qb>148 then Hm=Bf[-27128]or mk(-27128,103807,57714)break else Hm=Bf[-9735]or mk(-9735,90988,48305)break end Hm=Bf[-27534]or mk(-27534,21636,26901)end elseif Hm>31663 then if Hm<=32013 then vl,cj,sd=Gj(vl)Hm=Bf[-30657]or mk(-30657,67231,24802)elseif Hm<=32198 then if not(Mi[kc[36711]])then Hm=Bf[-30995]or mk(-30995,71852,42365)break else Hm=Bf[2474]or mk(2474,94559,50326)break end Hm=Bf[23628]or mk(23628,25761,31088)else Nm+=kc[26978]Hm=Bf[13587]or mk(13587,41594,8879)end elseif Hm<=31274 then Mi[kc[36711]]=Mi[kc[48815]][kc[19435]+1]Hm=Bf[-2101]or mk(-2101,44428,12317)elseif Hm>31394 then if Qb>150 then Hm=Bf[19239]or mk(19239,67802,44725)break else Hm=Bf[-8930]or mk(-8930,101024,60544)break end Hm=Bf[27045]or mk(27045,35131,7150)else if Mi[kc[36711]]<=Mi[kc[24751]]then Hm=Bf[-6181]or mk(-6181,44411,26345)break else Hm=Bf[-1384]or mk(-1384,86552,34338)break end Hm=Bf[-20039]or mk(-20039,51428,54581)end elseif Hm>20755 then if Hm<=22701 then if Hm<=21685 then if Hm<=21255 then Nn={[2]=Mi[ld[48815]],[1]=2};Nn[3]=Nn rf[(Hi-83)]=Nn Hm=Bf[11376]or mk(11376,86983,56358)else Nm-=1 Sf[Nm]={[24007]=71,[36711]=kc[36711],[48815]=kc[48815],[19435]=0}Hm=Bf[-12682]or mk(-12682,61829,35860)end elseif Hm<=22430 then if Hm<=22371 then vl,cj,sd=tf.__iter(vl)Hm=Bf[-4818]or mk(-4818,93868,55597)else Ma=Fi-R+1 Hm=Bf[-22399]or mk(-22399,27100,1515)end else if not(Qb>188)then Hm=Bf[-28489]or mk(-28489,78313,63760)break else Hm=Bf[-24022]or mk(-24022,100887,41800)break end Hm=Bf[21086]or mk(21086,61946,35887)end elseif Hm<=23866 then if Hm<=23504 then Ig=Ri;if zk~=zk then Hm=Bf[10855]or mk(10855,41610,19782)else Hm=25376 end elseif Hm<=23765 then Ri=Ri+nb;Ig=Ri;if Ri~=Ri then Hm=Bf[-4363]or mk(-4363,49820,28020)else Hm=Bf[-3131]or mk(-3131,75168,36851)end else ab=Sf[Nm];ab[63743]=(function(Da,Xk)local j,el,xl,Pk,If,_k,Rk,Zc Rk,j={},function(gl,Mc,pa)Rk[gl]=Tm(Mc,6702)-Tm(pa,48382)return Rk[gl]end el=Rk[15774]or j(15774,51989,52815)repeat while true do if el<=29916 then if el<=13358 then if el>7260 then if el<=9998 then Pk=xl;if _k~=_k then el=Rk[5728]or j(5728,88421,57242)else el=Rk[-20705]or j(-20705,52171,7680)end else if(Zc>=0 and xl>_k)or((Zc<0 or Zc~=Zc)and xl<_k)then el=Rk[15050]or j(15050,75145,58174)else el=Rk[-26162]or j(-26162,37470,49760)end end else If=If..qn(B(fk(Da,(Pk-29)+1),fk(Xk,(Pk-29)%#Xk+1)))el=Rk[-12681]or j(-12681,39434,33676)end elseif el<=20382 then xl=xl+Zc;Pk=xl;if xl~=xl then el=57319 else el=12007 end else If=('');_k,xl,Zc=(#Da-1)+29,29,1 el=7989 end else return If end end until el==11288 end)(ab[63743],kc[63743])kc[24007]=134 Hm=Bf[-30113]or mk(-30113,74776,47241)end elseif Hm>24314 then Md=false Nm+=1 if not(Qb>126)then Hm=Bf[19862]or mk(19862,53163,12848)break else Hm=Bf[3305]or mk(3305,129784,46797)break end Hm=Bf[-1617]or mk(-1617,63256,36233)else if not(Qb>214)then Hm=Bf[18307]or mk(18307,49484,25284)break else Hm=Bf[6348]or mk(6348,108346,62447)break end Hm=Bf[-9799]or mk(-9799,41412,9173)end elseif Hm>18730 then if Hm>19818 then if Hm>20182 then if Hm>20354 then if Hm>20518 then Nm+=kc[26978]Hm=Bf[-17876]or mk(-17876,62890,34943)else Nm+=kc[26978]Hm=Bf[12543]or mk(12543,30595,3606)end else if Qb>61 then Hm=Bf[27205]or mk(27205,31466,5436)break else Hm=Bf[-13705]or mk(-13705,49974,4719)break end Hm=Bf[-569]or mk(-569,75559,48634)end elseif Hm<=19940 then if Hm<=19886 then if Qb>100 then Hm=Bf[32013]or mk(32013,60652,9841)break else Hm=Bf[-16778]or mk(-16778,33330,5443)break end Hm=Bf[9627]or mk(9627,55544,58665)else Xc=Mi[hb]zk,nb,Ri=Ye,1,hb+1 Hm=Bf[-22006]or mk(-22006,43190,7512)end elseif Hm>20032 then Ei,df,_j=kc[63743],kc[34382],Mi[kc[36711]];if not((_j==Ei)~=df)then Hm=Bf[-1547]or mk(-1547,102490,44263)break else Hm=Bf[-17799]or mk(-17799,33459,32147)break end Hm=Bf[-8624]or mk(-8624,55810,60055)else ja[kc]=nil Nm+=1 Hm=Bf[-29909]or mk(-29909,77766,46555)end elseif Hm<=19446 then if not(Qb>55)then Hm=Bf[16931]or mk(16931,18982,30864)break else Hm=Bf[-11508]or mk(-11508,84514,11810)break end Hm=Bf[12766]or mk(12766,58653,65420)else ko(Fe,1,Jg,y+3,Mi)Mi[y+2]=Mi[y+3]Nm+=kc[26978]Hm=Bf[-5010]or mk(-5010,77185,45072)end elseif Hm<=17414 then if Hm<=16964 then Mi[kc[36711]]=Mi[kc[48815]]+Mi[kc[19435]]Hm=Bf[21267]or mk(21267,38800,11777)else Kd,H,Yl=Gb.__iter(Kd)Hm=Bf[-23720]or mk(-23720,69441,21777)end elseif Hm>17715 then if Hm<=17820 then jd,ha=kc[36711],kc[48815]-1;if ha==-1 then Hm=Bf[2161]or mk(2161,80110,33210)break end;Hm=Bf[-17328]or mk(-17328,94046,46875);else if Qb>72 then Hm=Bf[-28045]or mk(-28045,73509,1181)break else Hm=Bf[-2104]or mk(-2104,64888,15243)break end Hm=Bf[-13755]or mk(-13755,47447,52042)end else Xc..=Mi[Ig]Hm=Bf[29140]or mk(29140,53426,15170)end end until Hm==18 end local Ea Ea=function(...)local Nc,Xg,K,lh,af,El,yj,ni,qe,o yj,af={},function(wo,ik,Zf)yj[wo]=Tm(ik,54853)-Tm(Zf,8566)return yj[wo]end K=yj[12703]or af(12703,21714,23112)repeat while true do if K>31046 then if K<=49587 then ni=sb(ni)K=yj[-26937]or af(-26937,72129,50471)elseif K<=56126 then Xg=S(oi(Ia,Nc,Gl[37474],Gl[62885],El));if not(Xg[65113][1])then K=yj[1387]or af(1387,31686,23235)break else K=yj[-16849]or af(-16849,20265,2296)break end K=7703 elseif K>59080 then return pm(ni,0)else lh,qe=Gl[25729]+1,o.n-Gl[25729];El[37168]=qe;ko(o,lh,lh+qe-1,1,El[65113])K=yj[-26203]or af(-26203,115980,26249)end elseif K<=15259 then if K<=7315 then o,Nc,El=kk(...),je(Gl[32320]),{[37168]=0,[65113]={}};ko(o,1,Gl[25729],0,Nc)if Gl[25729]<o.n then K=yj[8433]or af(8433,122754,1564)break end K=52042 elseif K>10226 then ni=Xg[65113][2];if not(pg(ni)==false)then K=yj[-25392]or af(-25392,89639,48217)break else K=yj[26254]or af(26254,82562,56802)break end K=60211 else K=yj[-13018]or af(-13018,6668,4936);break;end else return k(Xg[65113],2,Xg[37168])end end until K==39435 end return Ea end return Ld(vj,Vn)end local _f _f,ti={[0]=0},function()_f[0]=_f[0]+1 return{[1]=_f[0],[3]=_f}end ze=fa return(function()local Me,Km,Pb,Pl Pb={[1]=2,[2]=ze};Pb[3]=Pb Me={[1]=2,[2]=cl}Me[3]=Me Pl={[2]=_i,[1]=2}Pl[3]=Pl Km={[2]=fl,[1]=2}Km[3]=Km return ze(mc(''),{[4]=Km,[2]=Me,[3]=Pl,[1]=Pb})end)()(...)
